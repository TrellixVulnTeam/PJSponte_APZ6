{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Injectable, Pipe, forwardRef, Component, Input, Output, ViewChildren, HostListener, ViewChild, HostBinding, NgModule } from '@angular/core';\nimport * as i3 from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nconst _c0 = [\"dropdownList\"];\nconst _c1 = [\"availableOption\"];\n\nconst _c2 = function (a0) {\n  return {\n    active: a0\n  };\n};\n\nfunction NgxSelectDropdownComponent_div_5_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 13)(1, \"input\", 14);\n    i0.ɵɵlistener(\"change\", function NgxSelectDropdownComponent_div_5_div_2_Template_input_change_1_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r7.changeSearchText($event));\n    })(\"input\", function NgxSelectDropdownComponent_div_5_div_2_Template_input_input_1_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r9 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r9.searchTextChanged());\n    })(\"ngModelChange\", function NgxSelectDropdownComponent_div_5_div_2_Template_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r10 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r10.searchText = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"label\", 15);\n    i0.ɵɵelement(3, \"span\", 16);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"direction\", ctx_r2.config.inputDirection);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.searchText);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(5, _c2, ctx_r2.searchText));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.config.searchPlaceholder, \"\");\n  }\n}\n\nfunction NgxSelectDropdownComponent_div_5_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 17);\n    i0.ɵɵlistener(\"click\", function NgxSelectDropdownComponent_div_5_li_4_Template_li_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r14);\n      const selected_r11 = restoredCtx.$implicit;\n      const i_r12 = restoredCtx.index;\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r13.deselectItem(selected_r11, i_r12));\n    });\n    i0.ɵɵelementStart(1, \"span\", 18);\n    i0.ɵɵtext(2, \"x\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const selected_r11 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.config.displayFn ? ctx_r3.config.displayFn(selected_r11) : selected_r11[ctx_r3.config.displayKey] || selected_r11, \" \");\n  }\n}\n\nfunction NgxSelectDropdownComponent_div_5_hr_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"hr\");\n  }\n}\n\nconst _c3 = function (a0, a1) {\n  return {\n    active: a0,\n    disabled: a1\n  };\n};\n\nfunction NgxSelectDropdownComponent_div_5_li_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 19, 20);\n    i0.ɵɵlistener(\"click\", function NgxSelectDropdownComponent_div_5_li_7_Template_li_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r19);\n      const item_r15 = restoredCtx.$implicit;\n      const i_r16 = restoredCtx.index;\n      const ctx_r18 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r18.selectItem(item_r15, i_r16));\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r15 = ctx.$implicit;\n    const i_r16 = ctx.index;\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(2, _c3, ctx_r5.focusedItemIndex == i_r16 && !item_r15.disabled, item_r15.disabled));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r5.config.displayFn ? ctx_r5.config.displayFn(item_r15) : item_r15[ctx_r5.config.displayKey] || item_r15, \" \");\n  }\n}\n\nfunction NgxSelectDropdownComponent_div_5_li_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r6.config.noResultsFound);\n  }\n}\n\nfunction NgxSelectDropdownComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5, 6);\n    i0.ɵɵtemplate(2, NgxSelectDropdownComponent_div_5_div_2_Template, 5, 7, \"div\", 7);\n    i0.ɵɵelementStart(3, \"ul\", 8);\n    i0.ɵɵtemplate(4, NgxSelectDropdownComponent_div_5_li_4_Template, 5, 1, \"li\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, NgxSelectDropdownComponent_div_5_hr_5_Template, 1, 0, \"hr\", 10);\n    i0.ɵɵelementStart(6, \"ul\", 11);\n    i0.ɵɵtemplate(7, NgxSelectDropdownComponent_div_5_li_7_Template, 3, 5, \"li\", 12);\n    i0.ɵɵpipe(8, \"limitTo\");\n    i0.ɵɵpipe(9, \"filterBy\");\n    i0.ɵɵtemplate(10, NgxSelectDropdownComponent_div_5_li_10_Template, 2, 1, \"li\", 10);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"max-height\", ctx_r0.config.height)(\"top\", ctx_r0.top);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.config.search);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.selectedItems);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.selectedItems.length > 0 && ctx_r0.availableItems.length > 0);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind2(8, 9, i0.ɵɵpipeBind3(9, 12, ctx_r0.availableItems, ctx_r0.searchText, ctx_r0.config.searchOnKey), ctx_r0.config.limitTo));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.showNotFound);\n  }\n}\n\nconst _c4 = function (a0) {\n  return {\n    \"ngx-disabled\": a0\n  };\n};\n\nconst _c5 = function (a0) {\n  return {\n    \"up\": a0\n  };\n};\n\nclass SelectDropDownService {\n  constructor() {\n    this.openDropdownInstance = new EventEmitter();\n    this.closeDropdownInstance = new EventEmitter();\n    this.openInstances = []; // constructor\n  }\n\n  isOpen(instanceId) {\n    return this.openInstances.indexOf(instanceId) > -1;\n  }\n  /**\n   * @summary: Open a specific dropdown instance based on the instance ID.\n   * @param instanceId: Instance id of the dropdown that must be opened.\n   */\n\n\n  openDropdown(instanceId) {\n    this.openDropdownInstance.emit(instanceId);\n  }\n  /**\n   * @summary: Close a specific dropdown instance based on the instance ID.\n   * @param instanceId: Instance id of the dropdown that must be closed.\n   */\n\n\n  closeDropdown(instanceId) {\n    this.closeDropdownInstance.emit(instanceId);\n  }\n\n}\n/** @nocollapse */\n\n\nSelectDropDownService.ɵfac = function SelectDropDownService_Factory(t) {\n  return new (t || SelectDropDownService)();\n};\n/** @nocollapse */\n\n\nSelectDropDownService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: SelectDropDownService,\n  factory: SelectDropDownService.ɵfac,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SelectDropDownService, [{\n    type: Injectable,\n    args: [{\n      providedIn: \"root\"\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n/**\n * filters an array based on searctext\n */\n\n\nclass FilterByPipe {\n  transform(array, searchText, keyName) {\n    if (!array || !searchText || !Array.isArray(array)) {\n      return array;\n    }\n\n    if (typeof array[0] === 'string') {\n      return array.filter(item => item.toLowerCase().indexOf(searchText.toLowerCase()) > -1);\n    } // filter array, items which match and return true will be\n    // kept, false will be filtered out\n\n\n    if (!keyName) {\n      return array.filter(item => {\n        for (const key in item) {\n          if (typeof item[key] !== 'object' && item[key].toString().toLowerCase().indexOf(searchText.toLowerCase()) > -1) {\n            return true;\n          }\n        }\n\n        return false;\n      });\n    } else {\n      return array.filter(item => {\n        if (typeof item[keyName] !== 'object' && item[keyName].toString().toLowerCase().indexOf(searchText.toLowerCase()) > -1) {\n          return true;\n        }\n\n        return false;\n      });\n    }\n  }\n\n}\n/** @nocollapse */\n\n\nFilterByPipe.ɵfac = function FilterByPipe_Factory(t) {\n  return new (t || FilterByPipe)();\n};\n/** @nocollapse */\n\n\nFilterByPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"filterBy\",\n  type: FilterByPipe,\n  pure: true\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FilterByPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'filterBy'\n    }]\n  }], null, null);\n})();\n\nclass LimitToPipe {\n  transform(array, itemsCount, startIndex = 0) {\n    if (!Array.isArray(array) || itemsCount === 0) {\n      return array;\n    }\n\n    return array.slice(startIndex, startIndex + itemsCount);\n  }\n\n}\n/** @nocollapse */\n\n\nLimitToPipe.ɵfac = function LimitToPipe_Factory(t) {\n  return new (t || LimitToPipe)();\n};\n/** @nocollapse */\n\n\nLimitToPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"limitTo\",\n  type: LimitToPipe,\n  pure: true\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LimitToPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'limitTo'\n    }]\n  }], null, null);\n})();\n\nclass NgxSelectDropdownComponent {\n  constructor(cdref, _elementRef, dropdownService) {\n    this.cdref = cdref;\n    this._elementRef = _elementRef;\n    this.dropdownService = dropdownService;\n    /**\n     * Get the required inputs\n     */\n\n    this.options = [];\n    /**\n     * configuration options\n     */\n\n    this.config = {};\n    /**\n     * Whether multiple selection or single selection allowed\n     */\n\n    this.multiple = false;\n    /**\n     * change event when value changes to provide user to handle things in change event\n     */\n\n    this.change = new EventEmitter();\n    /**\n     * The search text change event emitter emitted when user type in the search input\n     */\n\n    this.searchChange = new EventEmitter();\n    /**\n     * Event emitted when dropdown is open.\n     */\n\n    this.open = new EventEmitter();\n    /**\n     * Event emitted when dropdown is open.\n     */\n\n    this.close = new EventEmitter();\n    /**\n     * Toogle the dropdown list\n     */\n\n    this.toggleDropdown = false;\n    /**\n     * Available items for selection\n     */\n\n    this.availableItems = [];\n    /**\n     * Selected Items\n     */\n\n    this.selectedItems = [];\n    /**\n     * Selection text to be Displayed\n     */\n\n    this.selectedDisplayText = \"Select\";\n    /**\n     * variable to track if clicked inside or outside of component\n     */\n\n    this.clickedInside = false;\n    /**\n     * variable to track keypress event inside and outsid of component\n     */\n\n    this.insideKeyPress = false;\n    /**\n     * variable to track the focused item whenuser uses arrow keys to select item\n     */\n\n    this.focusedItemIndex = null;\n    /**\n     * element to show not found text when not itmes match the search\n     */\n\n    this.showNotFound = false;\n\n    this.onChange = () => {// empty\n    };\n\n    this.onTouched = () => {// empty\n    };\n\n    this.tabindex = 0;\n    this.multiple = false;\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  set value(val) {\n    this._value = val;\n    this.onChange(val);\n    this.onTouched();\n  }\n  /**\n   * click listener for host inside this component i.e\n   * if many instances are there, this detects if clicked inside\n   * this instance\n   */\n\n\n  clickInsideComponent() {\n    this.clickedInside = true;\n  }\n  /**\n   * View reference for the dorpdown list\n   */\n\n\n  set dropDownElement(ref) {\n    if (ref) {\n      // initially setter gets called with undefined\n      this.dropdownList = ref;\n    }\n  }\n  /**\n   * Event listener for the blur event to hide the dropdown\n   */\n\n\n  blur() {\n    if (!this.insideKeyPress) {\n      this.toggleDropdown = false;\n    }\n  }\n\n  focus() {\n    /* istanbul ignore else */\n    if (!this.disabled) {\n      this.toggleSelectDropdown();\n    }\n  }\n  /**\n   * click handler on documnent to hide the open dropdown if clicked outside\n   */\n\n\n  clickOutsideComponent() {\n    /* istanbul ignore else */\n    if (!this.clickedInside) {\n      this.toggleDropdown = false;\n      this.resetArrowKeyActiveElement(); // clear searh on close\n\n      this.searchText = null;\n      this.close.emit();\n    }\n\n    this.clickedInside = false;\n  }\n  /**\n   * click handler on documnent to hide the open dropdown if clicked outside\n   */\n\n\n  KeyPressOutsideComponent() {\n    /* istanbul ignore else */\n    if (!this.insideKeyPress) {\n      this.toggleDropdown = false;\n      this.resetArrowKeyActiveElement();\n    }\n\n    this.insideKeyPress = false;\n  }\n  /**\n   * Event handler for key up and down event and enter press for selecting element\n   */\n\n\n  handleKeyboardEvent($event) {\n    this.insideKeyPress = true;\n    /* istanbul ignore else */\n\n    if ($event.keyCode === 27 || this.disabled) {\n      this.toggleDropdown = false;\n      this.insideKeyPress = false;\n      return;\n    }\n\n    const avaOpts = this.availableOptions.toArray();\n    /* istanbul ignore else */\n\n    if ($event.keyCode !== 9 && avaOpts.length === 0 && !this.toggleDropdown) {\n      this.toggleDropdown = true;\n    } // Arrow Down\n\n    /* istanbul ignore else */\n\n\n    if ($event.keyCode === 40 && avaOpts.length > 0) {\n      this.onArrowKeyDown();\n      /* istanbul ignore else */\n\n      if (this.focusedItemIndex >= avaOpts.length) {\n        this.focusedItemIndex = 0;\n      }\n\n      avaOpts[this.focusedItemIndex].nativeElement.focus();\n      $event.preventDefault();\n    } // Arrow Up\n\n    /* istanbul ignore else */\n\n\n    if ($event.keyCode === 38 && avaOpts.length) {\n      this.onArrowKeyUp();\n      /* istanbul ignore else */\n\n      if (this.focusedItemIndex >= avaOpts.length) {\n        this.focusedItemIndex = avaOpts.length - 1;\n      }\n\n      avaOpts[this.focusedItemIndex].nativeElement.focus();\n      $event.preventDefault();\n    } // Enter\n\n    /* istanbul ignore else */\n\n\n    if ($event.keyCode === 13 && this.focusedItemIndex !== null) {\n      const filteredItems = new FilterByPipe().transform(this.availableItems, this.searchText, this.config.searchOnKey);\n      this.selectItem(filteredItems[this.focusedItemIndex], this.availableItems.indexOf(filteredItems[this.focusedItemIndex]));\n      return false;\n    }\n  }\n  /**\n   * Component onInit\n   */\n\n\n  ngOnInit() {\n    /* istanbul ignore else */\n    if (typeof this.options !== \"undefined\" && typeof this.config !== \"undefined\" && Array.isArray(this.options)) {\n      this.availableItems = [...this.options.sort(this.config.customComparator)];\n      this.initDropdownValuesAndOptions();\n    }\n\n    this.serviceSubscriptions();\n  }\n\n  isVisible() {\n    if (!this.dropdownList) {\n      return {\n        visible: false,\n        element: null\n      };\n    }\n\n    const el = this.dropdownList.nativeElement;\n\n    if (!el) {\n      return {\n        visible: false,\n        element: el\n      };\n    }\n\n    const rect = el.getBoundingClientRect();\n    const topShown = rect.top >= 0;\n    const bottomShown = rect.bottom <= window.innerHeight;\n    return {\n      visible: topShown && bottomShown,\n      element: el\n    };\n  }\n\n  serviceSubscriptions() {\n    this.dropdownService.openDropdownInstance.subscribe(instanceId => {\n      if (this.instanceId === instanceId) {\n        this.toggleDropdown = true;\n        this.openStateChange();\n        this.resetArrowKeyActiveElement();\n      }\n    });\n    this.dropdownService.closeDropdownInstance.subscribe(instanceId => {\n      if (this.instanceId === instanceId) {\n        this.toggleDropdown = false;\n        this.openStateChange();\n        this.resetArrowKeyActiveElement();\n      }\n    });\n  }\n  /**\n   * after view init to subscribe to available option changes\n   */\n\n\n  ngAfterViewInit() {\n    this.availableOptions.changes.subscribe(this.setNotFoundState.bind(this));\n  }\n\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n  }\n\n  writeValue(value, internal) {\n    if (value) {\n      if (Array.isArray(value)) {\n        if (this.multiple) {\n          this.value = value;\n        } else if (value.length > 0) {\n          this.value = value[0];\n        }\n      } else {\n        this.value = value;\n      }\n      /* istanbul ignore else */\n\n\n      if (this.selectedItems.length === 0) {\n        if (Array.isArray(value)) {\n          this.selectedItems = value;\n        } else {\n          this.selectedItems.push(value);\n        }\n\n        this.initDropdownValuesAndOptions();\n      }\n    } else {\n      this.value = [];\n      /* istanbul ignore else */\n\n      if (!internal) {\n        this.reset();\n      }\n    }\n    /* istanbul ignore else */\n\n\n    if (!internal) {\n      this.reset();\n    }\n  }\n\n  reset() {\n    if (!this.config) {\n      return;\n    }\n\n    this.selectedItems = [];\n    this.availableItems = [...this.options.sort(this.config.customComparator)];\n    this.initDropdownValuesAndOptions();\n  }\n  /**\n   * function sets whether to show items not found text or not\n   */\n\n\n  setNotFoundState() {\n    if (this.availableOptions.length === 0) {\n      this.showNotFound = true;\n    } else {\n      this.showNotFound = false;\n    }\n\n    this.cdref.detectChanges();\n  }\n  /**\n   * Component onchage i.e when any of the input properties change\n   */\n\n\n  ngOnChanges(changes) {\n    if (!this.config) {\n      return;\n    }\n\n    this.selectedItems = []; // this.searchText = null;\n\n    this.options = this.options || [];\n    /* istanbul ignore else */\n\n    if (changes.options) {\n      this.availableItems = [...this.options.sort(this.config.customComparator)];\n    }\n    /* istanbul ignore else */\n\n\n    if (changes.value) {\n      /* istanbul ignore else */\n      if (JSON.stringify(changes.value.currentValue) === JSON.stringify([]) || changes.value.currentValue === \"\" || changes.value.currentValue === null) {\n        this.availableItems = [...this.options.sort(this.config.customComparator)];\n      }\n    }\n\n    this.initDropdownValuesAndOptions();\n  }\n  /**\n   * Deselct a selected items\n   * @param item:  item to be deselected\n   * @param index:  index of the item\n   */\n\n\n  deselectItem(item, index) {\n    this.selectedItems.forEach((element, i) => {\n      /* istanbul ignore else */\n      if (item === element) {\n        this.selectedItems.splice(i, 1);\n      }\n    });\n    let sortedItems = [...this.availableItems];\n    /* istanbul ignore else */\n\n    if (!this.availableItems.includes(item)) {\n      this.availableItems.push(item);\n      sortedItems = this.availableItems.sort(this.config.customComparator);\n    }\n\n    this.selectedItems = [...this.selectedItems];\n    this.availableItems = [...sortedItems];\n    /* istanbul ignore else */\n\n    if (!Array.isArray(this.value)) {\n      this.value = [];\n    }\n\n    this.valueChanged();\n    this.resetArrowKeyActiveElement();\n  }\n  /**\n   * Select an item\n   * @param item:  item to be selected\n   * @param index:  index of the item\n   */\n\n\n  selectItem(item, index) {\n    /* istanbul ignore else */\n    if (!this.multiple) {\n      /* istanbul ignore else */\n      if (this.selectedItems.length > 0) {\n        this.availableItems.push(this.selectedItems[0]);\n      }\n\n      this.selectedItems = [];\n      this.toggleDropdown = false;\n    }\n\n    this.availableItems.forEach((element, i) => {\n      /* istanbul ignore else */\n      if (item === element) {\n        this.selectedItems.push(item);\n        this.availableItems.splice(i, 1);\n      }\n    });\n    /* istanbul ignore else */\n\n    if (this.config.clearOnSelection) {\n      this.searchText = null;\n    }\n\n    this.selectedItems = [...this.selectedItems];\n    this.availableItems = [...this.availableItems];\n    this.selectedItems.sort(this.config.customComparator);\n    this.availableItems.sort(this.config.customComparator); // this.searchText = null;\n\n    this.valueChanged();\n    this.resetArrowKeyActiveElement();\n  }\n  /**\n   * When selected items changes trigger the chaange back to parent\n   */\n\n\n  valueChanged() {\n    this.writeValue(this.selectedItems, true); // this.valueChange.emit(this.value);\n\n    this.change.emit({\n      value: this.value\n    });\n    this.setSelectedDisplayText();\n  }\n  /**\n   * Toggle the dropdownlist on/off\n   */\n\n\n  toggleSelectDropdown() {\n    this.toggleDropdown = !this.toggleDropdown;\n    this.top = \"30px\";\n    this.openStateChange();\n    this.resetArrowKeyActiveElement();\n    setTimeout(() => {\n      const {\n        visible,\n        element\n      } = this.isVisible();\n\n      if (element) {\n        this.top = visible ? \"30px\" : `-${element.getBoundingClientRect().height}px`;\n      }\n    }, 5);\n  }\n\n  openStateChange() {\n    if (this.toggleDropdown) {\n      this.dropdownService.openInstances.push(this.instanceId);\n      this.open.emit();\n    } else {\n      this.searchText = null;\n      this.close.emit();\n      this.dropdownService.openInstances.splice(this.dropdownService.openInstances.indexOf(this.instanceId), 1);\n    }\n  }\n  /**\n   * The change handler for search text\n   */\n\n\n  searchTextChanged() {\n    this.searchChange.emit(this.searchText);\n  }\n\n  changeSearchText($event) {\n    $event.stopPropagation();\n  }\n  /**\n   * initialize the config and other properties\n   */\n\n\n  initDropdownValuesAndOptions() {\n    const config = {\n      displayKey: \"description\",\n      height: \"auto\",\n      search: false,\n      placeholder: \"Select\",\n      searchPlaceholder: \"Search...\",\n      limitTo: 0,\n      customComparator: undefined,\n      noResultsFound: \"No results found!\",\n      moreText: \"more\",\n      searchOnKey: null,\n      clearOnSelection: false,\n      inputDirection: \"ltr\"\n    };\n    /* istanbul ignore else */\n\n    if (this.config === \"undefined\" || Object.keys(this.config).length === 0) {\n      this.config = { ...config\n      };\n    }\n\n    for (const key of Object.keys(config)) {\n      this.config[key] = this.config[key] ? this.config[key] : config[key];\n    }\n\n    this.config = { ...this.config\n    }; // Adding placeholder in config as default param\n\n    this.selectedDisplayText = this.config[\"placeholder\"];\n    /* istanbul ignore else */\n\n    if (this.value !== \"\" && typeof this.value !== \"undefined\") {\n      if (Array.isArray(this.value)) {\n        this.selectedItems = this.value;\n      } else if (this.value !== \"\" && this.value !== null) {\n        this.selectedItems[0] = this.value;\n      } else {\n        this.selectedItems = [];\n        this.value = [];\n      }\n\n      this.selectedItems.forEach(item => {\n        const ind = this.availableItems.findIndex(aItem => JSON.stringify(item) === JSON.stringify(aItem));\n\n        if (ind !== -1) {\n          this.availableItems.splice(ind, 1);\n        }\n      });\n    }\n\n    this.setSelectedDisplayText();\n  }\n  /**\n   * set the text to be displayed\n   */\n\n\n  setSelectedDisplayText() {\n    let text = this.selectedItems[0];\n    /* istanbul ignore else */\n\n    if (typeof this.selectedItems[0] === \"object\") {\n      text = this.config.displayFn ? this.config.displayFn(this.selectedItems[0]) : this.selectedItems[0][this.config.displayKey];\n    }\n\n    if (this.multiple && this.selectedItems.length > 0) {\n      this.selectedDisplayText = this.selectedItems.length === 1 ? text : text + ` + ${this.selectedItems.length - 1} ${this.config.moreText}`;\n    } else {\n      this.selectedDisplayText = this.selectedItems.length === 0 ? this.config.placeholder : text;\n    }\n  }\n  /**\n   * Event handler for arrow key up event thats focuses on a item\n   */\n\n\n  onArrowKeyUp() {\n    /* istanbul ignore else */\n    if (this.focusedItemIndex === 0) {\n      this.focusedItemIndex = this.availableItems.length - 1;\n      return;\n    }\n    /* istanbul ignore else */\n\n\n    if (this.onArrowKey()) {\n      this.focusedItemIndex--;\n    }\n  }\n  /**\n   * Event handler for arrow key down event thats focuses on a item\n   */\n\n\n  onArrowKeyDown() {\n    /* istanbul ignore else */\n    if (this.focusedItemIndex === this.availableItems.length - 1) {\n      this.focusedItemIndex = 0;\n      return;\n    }\n    /* istanbul ignore else */\n\n\n    if (this.onArrowKey()) {\n      this.focusedItemIndex++;\n    }\n  }\n\n  onArrowKey() {\n    /* istanbul ignore else */\n    if (this.focusedItemIndex === null) {\n      this.focusedItemIndex = 0;\n      return false;\n    }\n\n    return true;\n  }\n  /**\n   * will reset the element that is marked active using arrow keys\n   */\n\n\n  resetArrowKeyActiveElement() {\n    this.focusedItemIndex = null;\n  }\n\n}\n/** @nocollapse */\n\n\nNgxSelectDropdownComponent.ɵfac = function NgxSelectDropdownComponent_Factory(t) {\n  return new (t || NgxSelectDropdownComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(SelectDropDownService));\n};\n/** @nocollapse */\n\n\nNgxSelectDropdownComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NgxSelectDropdownComponent,\n  selectors: [[\"ngx-select-dropdown\"]],\n  viewQuery: function NgxSelectDropdownComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n      i0.ɵɵviewQuery(_c1, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dropDownElement = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.availableOptions = _t);\n    }\n  },\n  hostVars: 1,\n  hostBindings: function NgxSelectDropdownComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function NgxSelectDropdownComponent_click_HostBindingHandler() {\n        return ctx.clickInsideComponent();\n      })(\"blur\", function NgxSelectDropdownComponent_blur_HostBindingHandler() {\n        return ctx.blur();\n      })(\"focus\", function NgxSelectDropdownComponent_focus_HostBindingHandler() {\n        return ctx.focus();\n      })(\"click\", function NgxSelectDropdownComponent_click_HostBindingHandler() {\n        return ctx.clickOutsideComponent();\n      }, false, i0.ɵɵresolveDocument)(\"keydown\", function NgxSelectDropdownComponent_keydown_HostBindingHandler() {\n        return ctx.KeyPressOutsideComponent();\n      }, false, i0.ɵɵresolveDocument)(\"keydown\", function NgxSelectDropdownComponent_keydown_HostBindingHandler($event) {\n        return ctx.handleKeyboardEvent($event);\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵattribute(\"tabindex\", ctx.tabindex);\n    }\n  },\n  inputs: {\n    _value: \"_value\",\n    options: \"options\",\n    config: \"config\",\n    multiple: \"multiple\",\n    disabled: \"disabled\",\n    instanceId: \"instanceId\"\n  },\n  outputs: {\n    change: \"change\",\n    searchChange: \"searchChange\",\n    open: \"open\",\n    close: \"close\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NgxSelectDropdownComponent),\n    multi: true\n  }]), i0.ɵɵNgOnChangesFeature],\n  decls: 6,\n  vars: 9,\n  consts: [[1, \"ngx-dropdown-container\"], [\"type\", \"button\", \"tabindex\", \"-1\", 1, \"ngx-dropdown-button\", 3, \"ngClass\", \"disabled\", \"click\"], [1, \"display-text\"], [1, \"nsdicon-angle-down\", 3, \"ngClass\"], [\"class\", \"ngx-dropdown-list-container\", 3, \"maxHeight\", \"top\", 4, \"ngIf\"], [1, \"ngx-dropdown-list-container\"], [\"dropdownList\", \"\"], [\"class\", \"search-container\", 4, \"ngIf\"], [1, \"selected-items\"], [\"class\", \"selected-item\", \"tabindex\", \"-1\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [1, \"available-items\"], [\"class\", \"available-item\", \"tabindex\", \"-1\", 3, \"ngClass\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"search-container\"], [\"name\", \"search-text\", \"tabindex\", \"-1\", \"autocomplete\", \"off\", 3, \"ngModel\", \"change\", \"input\", \"ngModelChange\"], [3, \"ngClass\"], [1, \"nsdicon-search\"], [\"tabindex\", \"-1\", 1, \"selected-item\", 3, \"click\"], [1, \"nsdicon-close\"], [\"tabindex\", \"-1\", 1, \"available-item\", 3, \"ngClass\", \"click\"], [\"availableOption\", \"\"]],\n  template: function NgxSelectDropdownComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function NgxSelectDropdownComponent_Template_button_click_1_listener() {\n        return ctx.toggleSelectDropdown();\n      });\n      i0.ɵɵelementStart(2, \"span\", 2);\n      i0.ɵɵtext(3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"span\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(5, NgxSelectDropdownComponent_div_5_Template, 11, 16, \"div\", 4);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(5, _c4, ctx.disabled))(\"disabled\", ctx.disabled);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\"\", ctx.selectedDisplayText, \" \");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c5, ctx.toggleDropdown));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.toggleDropdown);\n    }\n  },\n  dependencies: [i2.NgClass, i2.NgForOf, i2.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, FilterByPipe, LimitToPipe],\n  styles: [\".ngx-dropdown-container[_ngcontent-%COMP%]{width:100%;position:relative}.ngx-dropdown-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{display:inline-block;margin-bottom:0;font-weight:400;line-height:1.42857143;vertical-align:middle;touch-action:manipulation;cursor:pointer;-webkit-user-select:none;user-select:none;border:1px solid #ccc;border-radius:4px;color:#333;background-color:#fff;white-space:nowrap;overflow-x:hidden;text-overflow:ellipsis;text-align:left}.ngx-dropdown-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{display:inline;vertical-align:middle}.ngx-dropdown-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]   .nsdicon-angle-down[_ngcontent-%COMP%]{right:5px;position:relative;float:right;transition:transform .2s ease}.ngx-dropdown-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]   .nsdicon-angle-down[_ngcontent-%COMP%]:before{border-style:solid;border-width:.1em .1em 0 0;content:\\\"\\\";display:inline-block;height:10px;position:relative;vertical-align:text-top;width:10px;top:0;transform:rotate(135deg)}.ngx-dropdown-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]   .nsdicon-angle-down.up[_ngcontent-%COMP%]{transform:rotate(180deg);transition:transform .2s ease}.ngx-dropdown-container[_ngcontent-%COMP%]   .ngx-dropdown-button[_ngcontent-%COMP%]{width:100%;min-height:30px;padding:5px 10px;background-color:#fff}.ngx-dropdown-container[_ngcontent-%COMP%]   .ngx-dropdown-button[_ngcontent-%COMP%]   .display-text[_ngcontent-%COMP%]{display:inline-block;width:calc(100% - 20px)}.ngx-dropdown-container[_ngcontent-%COMP%]   .ngx-dropdown-list-container[_ngcontent-%COMP%]{box-sizing:border-box;border:1px solid rgba(0,0,0,.15);border-radius:4px;padding-left:10px;padding-right:10px;z-index:999999999;width:100%;background-clip:padding-box;background:white;position:absolute;box-shadow:5px 5px 5px #00000036;overflow-y:auto}.ngx-dropdown-container[_ngcontent-%COMP%]   .ngx-dropdown-list-container[_ngcontent-%COMP%]   .search-container[_ngcontent-%COMP%]{position:relative;padding-top:10px;margin-top:5px}.ngx-dropdown-container[_ngcontent-%COMP%]   .ngx-dropdown-list-container[_ngcontent-%COMP%]   .search-container[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{background-color:transparent;border:none;border-bottom:1px solid #9e9e9e;border-radius:0;outline:none;height:2rem;width:100%;font-size:13px;margin:0;padding:0;box-shadow:none;box-sizing:content-box;transition:all .3s}.ngx-dropdown-container[_ngcontent-%COMP%]   .ngx-dropdown-list-container[_ngcontent-%COMP%]   .search-container[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:focus{border-bottom:1px solid #26a69a}.ngx-dropdown-container[_ngcontent-%COMP%]   .ngx-dropdown-list-container[_ngcontent-%COMP%]   .search-container[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:focus + label[_ngcontent-%COMP%]{transform:translateY(-2px) scale(.8);transform-origin:0 0}.ngx-dropdown-container[_ngcontent-%COMP%]   .ngx-dropdown-list-container[_ngcontent-%COMP%]   .search-container[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{color:#9e9e9e;position:absolute;top:0;left:0;height:100%;font-size:1rem;cursor:text;transition:transform .2s ease-out;transform-origin:0% 100%;text-align:initial;transform:translateY(12px);pointer-events:none}.ngx-dropdown-container[_ngcontent-%COMP%]   .ngx-dropdown-list-container[_ngcontent-%COMP%]   .search-container[_ngcontent-%COMP%]   label.active[_ngcontent-%COMP%]{transform:translateY(-2px) scale(.8);transform-origin:0 0}.ngx-dropdown-container[_ngcontent-%COMP%]   .ngx-dropdown-list-container[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]{margin-top:1rem;margin-bottom:1rem;list-style-type:none;padding-left:0}.ngx-dropdown-container[_ngcontent-%COMP%]   .ngx-dropdown-list-container[_ngcontent-%COMP%]   ul.selected-items[_ngcontent-%COMP%]   .selected-item[_ngcontent-%COMP%]{background-color:#337ab7;color:#fff;margin-bottom:2px}.ngx-dropdown-container[_ngcontent-%COMP%]   .ngx-dropdown-list-container[_ngcontent-%COMP%]   ul.selected-items[_ngcontent-%COMP%]   .selected-item[_ngcontent-%COMP%]   .nsdicon-close[_ngcontent-%COMP%]{font-weight:700;font-size:large}.ngx-dropdown-container[_ngcontent-%COMP%]   .ngx-dropdown-list-container[_ngcontent-%COMP%]   ul.available-items[_ngcontent-%COMP%]   .available-item.active[_ngcontent-%COMP%]{background-color:#337ab7;color:#fff}.ngx-dropdown-container[_ngcontent-%COMP%]   .ngx-dropdown-list-container[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{font-size:inherit;cursor:pointer;display:block;padding:3px 20px;clear:both;font-weight:400;line-height:1.42857143;color:#333;white-space:normal}.ngx-dropdown-container[_ngcontent-%COMP%]   .ngx-disabled[_ngcontent-%COMP%]{pointer-events:none;background-color:#e9ecef;opacity:1;cursor:no-drop}\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxSelectDropdownComponent, [{\n    type: Component,\n    args: [{\n      selector: \"ngx-select-dropdown\",\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => NgxSelectDropdownComponent),\n        multi: true\n      }],\n      template: \"<div class=\\\"ngx-dropdown-container\\\">\\n    <button type=\\\"button\\\" tabindex=\\\"-1\\\" class=\\\"ngx-dropdown-button\\\" [ngClass]=\\\"{ 'ngx-disabled': disabled }\\\"\\n        [disabled]=\\\"disabled\\\" (click)=\\\"toggleSelectDropdown()\\\">\\n        <span class=\\\"display-text\\\">{{ selectedDisplayText }} </span>\\n        <span class=\\\"nsdicon-angle-down\\\" [ngClass]=\\\"{'up': toggleDropdown }\\\"></span>\\n    </button>\\n    <div #dropdownList class=\\\"ngx-dropdown-list-container\\\" *ngIf=\\\"toggleDropdown\\\" [style.maxHeight]=\\\"config.height\\\"\\n        [style.top]=\\\"top\\\">\\n        <div class=\\\"search-container\\\" *ngIf=\\\"config.search\\\">\\n            <input (change)=\\\"changeSearchText($event)\\\" [style.direction]=\\\"config.inputDirection\\\" name=\\\"search-text\\\"\\n                (input)=\\\"searchTextChanged()\\\" [(ngModel)]=\\\"searchText\\\" tabindex=\\\"-1\\\" autocomplete=\\\"off\\\" />\\n            <label [ngClass]=\\\"{ active: searchText }\\\">\\n                <span class=\\\"nsdicon-search\\\"></span>\\n                {{ config.searchPlaceholder }}</label>\\n        </div>\\n        <!-- <div class=\\\"select-options\\\">\\n            <div class=\\\"select-all\\\">Select all</div>\\n            <div class=\\\"clear-all\\\">Clear all</div>\\n        </div> -->\\n        <ul class=\\\"selected-items\\\">\\n            <li class=\\\"selected-item\\\" tabindex=\\\"-1\\\" *ngFor=\\\"let selected of selectedItems; let i = index\\\"\\n                (click)=\\\"deselectItem(selected, i)\\\">\\n                <span class=\\\"nsdicon-close\\\">x</span>\\n                <span>\\n                    {{\\n                    config.displayFn\\n                    ? config.displayFn(selected)\\n                    : selected[config.displayKey] || selected\\n                    }}\\n                </span>\\n            </li>\\n        </ul>\\n        <hr *ngIf=\\\"selectedItems.length > 0 && availableItems.length > 0\\\" />\\n        <ul class=\\\"available-items\\\">\\n            <li class=\\\"available-item\\\" #availableOption *ngFor=\\\"\\n            let item of availableItems\\n              | filterBy: searchText:config.searchOnKey\\n              | limitTo: config.limitTo;\\n            let i = index\\n          \\\" tabindex=\\\"-1\\\" [ngClass]=\\\"{\\n            active: focusedItemIndex == i && !item.disabled,\\n            disabled: item.disabled\\n          }\\\" (click)=\\\"selectItem(item, i)\\\">\\n                {{\\n                config.displayFn\\n                ? config.displayFn(item)\\n                : item[config.displayKey] || item\\n                }}\\n            </li>\\n            <li *ngIf=\\\"showNotFound\\\">{{ config.noResultsFound }}</li>\\n        </ul>\\n    </div>\\n</div>\",\n      styles: [\".ngx-dropdown-container{width:100%;position:relative}.ngx-dropdown-container button{display:inline-block;margin-bottom:0;font-weight:400;line-height:1.42857143;vertical-align:middle;touch-action:manipulation;cursor:pointer;-webkit-user-select:none;user-select:none;border:1px solid #ccc;border-radius:4px;color:#333;background-color:#fff;white-space:nowrap;overflow-x:hidden;text-overflow:ellipsis;text-align:left}.ngx-dropdown-container button span{display:inline;vertical-align:middle}.ngx-dropdown-container button .nsdicon-angle-down{right:5px;position:relative;float:right;transition:transform .2s ease}.ngx-dropdown-container button .nsdicon-angle-down:before{border-style:solid;border-width:.1em .1em 0 0;content:\\\"\\\";display:inline-block;height:10px;position:relative;vertical-align:text-top;width:10px;top:0;transform:rotate(135deg)}.ngx-dropdown-container button .nsdicon-angle-down.up{transform:rotate(180deg);transition:transform .2s ease}.ngx-dropdown-container .ngx-dropdown-button{width:100%;min-height:30px;padding:5px 10px;background-color:#fff}.ngx-dropdown-container .ngx-dropdown-button .display-text{display:inline-block;width:calc(100% - 20px)}.ngx-dropdown-container .ngx-dropdown-list-container{box-sizing:border-box;border:1px solid rgba(0,0,0,.15);border-radius:4px;padding-left:10px;padding-right:10px;z-index:999999999;width:100%;background-clip:padding-box;background:white;position:absolute;box-shadow:5px 5px 5px #00000036;overflow-y:auto}.ngx-dropdown-container .ngx-dropdown-list-container .search-container{position:relative;padding-top:10px;margin-top:5px}.ngx-dropdown-container .ngx-dropdown-list-container .search-container input{background-color:transparent;border:none;border-bottom:1px solid #9e9e9e;border-radius:0;outline:none;height:2rem;width:100%;font-size:13px;margin:0;padding:0;box-shadow:none;box-sizing:content-box;transition:all .3s}.ngx-dropdown-container .ngx-dropdown-list-container .search-container input:focus{border-bottom:1px solid #26a69a}.ngx-dropdown-container .ngx-dropdown-list-container .search-container input:focus+label{transform:translateY(-2px) scale(.8);transform-origin:0 0}.ngx-dropdown-container .ngx-dropdown-list-container .search-container label{color:#9e9e9e;position:absolute;top:0;left:0;height:100%;font-size:1rem;cursor:text;transition:transform .2s ease-out;transform-origin:0% 100%;text-align:initial;transform:translateY(12px);pointer-events:none}.ngx-dropdown-container .ngx-dropdown-list-container .search-container label.active{transform:translateY(-2px) scale(.8);transform-origin:0 0}.ngx-dropdown-container .ngx-dropdown-list-container ul{margin-top:1rem;margin-bottom:1rem;list-style-type:none;padding-left:0}.ngx-dropdown-container .ngx-dropdown-list-container ul.selected-items .selected-item{background-color:#337ab7;color:#fff;margin-bottom:2px}.ngx-dropdown-container .ngx-dropdown-list-container ul.selected-items .selected-item .nsdicon-close{font-weight:700;font-size:large}.ngx-dropdown-container .ngx-dropdown-list-container ul.available-items .available-item.active{background-color:#337ab7;color:#fff}.ngx-dropdown-container .ngx-dropdown-list-container ul li{font-size:inherit;cursor:pointer;display:block;padding:3px 20px;clear:both;font-weight:400;line-height:1.42857143;color:#333;white-space:normal}.ngx-dropdown-container .ngx-disabled{pointer-events:none;background-color:#e9ecef;opacity:1;cursor:no-drop}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: SelectDropDownService\n    }];\n  }, {\n    _value: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    config: [{\n      type: Input\n    }],\n    multiple: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    instanceId: [{\n      type: Input\n    }],\n    change: [{\n      type: Output\n    }],\n    searchChange: [{\n      type: Output\n    }],\n    open: [{\n      type: Output\n    }],\n    close: [{\n      type: Output\n    }],\n    availableOptions: [{\n      type: ViewChildren,\n      args: [\"availableOption\"]\n    }],\n    clickInsideComponent: [{\n      type: HostListener,\n      args: [\"click\"]\n    }],\n    dropDownElement: [{\n      type: ViewChild,\n      args: [\"dropdownList\"]\n    }],\n    blur: [{\n      type: HostListener,\n      args: [\"blur\"]\n    }],\n    focus: [{\n      type: HostListener,\n      args: [\"focus\"]\n    }],\n    clickOutsideComponent: [{\n      type: HostListener,\n      args: [\"document:click\"]\n    }],\n    KeyPressOutsideComponent: [{\n      type: HostListener,\n      args: [\"document:keydown\"]\n    }],\n    tabindex: [{\n      type: HostBinding,\n      args: ['attr.tabindex']\n    }],\n    handleKeyboardEvent: [{\n      type: HostListener,\n      args: [\"keydown\", [\"$event\"]]\n    }]\n  });\n})();\n\nclass SelectDropDownModule {}\n/** @nocollapse */\n\n\nSelectDropDownModule.ɵfac = function SelectDropDownModule_Factory(t) {\n  return new (t || SelectDropDownModule)();\n};\n/** @nocollapse */\n\n\nSelectDropDownModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: SelectDropDownModule\n});\n/** @nocollapse */\n\nSelectDropDownModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [CommonModule, FormsModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SelectDropDownModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgxSelectDropdownComponent, FilterByPipe, LimitToPipe],\n      imports: [CommonModule, FormsModule],\n      exports: [NgxSelectDropdownComponent, FilterByPipe, LimitToPipe],\n      providers: []\n    }]\n  }], null, null);\n})();\n/*\n * Public API Surface of ngx-select-dropdown\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { FilterByPipe, LimitToPipe, NgxSelectDropdownComponent, SelectDropDownModule, SelectDropDownService };","map":{"version":3,"names":["i0","EventEmitter","Injectable","Pipe","forwardRef","Component","Input","Output","ViewChildren","HostListener","ViewChild","HostBinding","NgModule","i3","NG_VALUE_ACCESSOR","FormsModule","i2","CommonModule","SelectDropDownService","constructor","openDropdownInstance","closeDropdownInstance","openInstances","isOpen","instanceId","indexOf","openDropdown","emit","closeDropdown","ɵfac","ɵprov","type","args","providedIn","FilterByPipe","transform","array","searchText","keyName","Array","isArray","filter","item","toLowerCase","key","toString","ɵpipe","name","LimitToPipe","itemsCount","startIndex","slice","NgxSelectDropdownComponent","cdref","_elementRef","dropdownService","options","config","multiple","change","searchChange","open","close","toggleDropdown","availableItems","selectedItems","selectedDisplayText","clickedInside","insideKeyPress","focusedItemIndex","showNotFound","onChange","onTouched","tabindex","value","_value","val","clickInsideComponent","dropDownElement","ref","dropdownList","blur","focus","disabled","toggleSelectDropdown","clickOutsideComponent","resetArrowKeyActiveElement","KeyPressOutsideComponent","handleKeyboardEvent","$event","keyCode","avaOpts","availableOptions","toArray","length","onArrowKeyDown","nativeElement","preventDefault","onArrowKeyUp","filteredItems","searchOnKey","selectItem","ngOnInit","sort","customComparator","initDropdownValuesAndOptions","serviceSubscriptions","isVisible","visible","element","el","rect","getBoundingClientRect","topShown","top","bottomShown","bottom","window","innerHeight","subscribe","openStateChange","ngAfterViewInit","changes","setNotFoundState","bind","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","writeValue","internal","push","reset","detectChanges","ngOnChanges","JSON","stringify","currentValue","deselectItem","index","forEach","i","splice","sortedItems","includes","valueChanged","clearOnSelection","setSelectedDisplayText","setTimeout","height","searchTextChanged","changeSearchText","stopPropagation","displayKey","search","placeholder","searchPlaceholder","limitTo","undefined","noResultsFound","moreText","inputDirection","Object","keys","ind","findIndex","aItem","text","displayFn","onArrowKey","ChangeDetectorRef","ElementRef","ɵcmp","provide","useExisting","multi","NgClass","NgForOf","NgIf","DefaultValueAccessor","NgControlStatus","NgModel","selector","providers","template","styles","SelectDropDownModule","ɵmod","ɵinj","declarations","imports","exports"],"sources":["C:/Projetos/01Pessoal/Dev/FrontEnd/Sponte-App/node_modules/ngx-select-dropdown/fesm2020/ngx-select-dropdown.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { EventEmitter, Injectable, Pipe, forwardRef, Component, Input, Output, ViewChildren, HostListener, ViewChild, HostBinding, NgModule } from '@angular/core';\nimport * as i3 from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\nclass SelectDropDownService {\n    constructor() {\n        this.openDropdownInstance = new EventEmitter();\n        this.closeDropdownInstance = new EventEmitter();\n        this.openInstances = [];\n        // constructor\n    }\n    isOpen(instanceId) {\n        return this.openInstances.indexOf(instanceId) > -1;\n    }\n    /**\n     * @summary: Open a specific dropdown instance based on the instance ID.\n     * @param instanceId: Instance id of the dropdown that must be opened.\n     */\n    openDropdown(instanceId) {\n        this.openDropdownInstance.emit(instanceId);\n    }\n    /**\n     * @summary: Close a specific dropdown instance based on the instance ID.\n     * @param instanceId: Instance id of the dropdown that must be closed.\n     */\n    closeDropdown(instanceId) {\n        this.closeDropdownInstance.emit(instanceId);\n    }\n}\n/** @nocollapse */ SelectDropDownService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.5\", ngImport: i0, type: SelectDropDownService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n/** @nocollapse */ SelectDropDownService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.5\", ngImport: i0, type: SelectDropDownService, providedIn: \"root\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.5\", ngImport: i0, type: SelectDropDownService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: \"root\",\n                }]\n        }], ctorParameters: function () { return []; } });\n\n/**\n * filters an array based on searctext\n */\nclass FilterByPipe {\n    transform(array, searchText, keyName) {\n        if (!array || !searchText || !Array.isArray(array)) {\n            return array;\n        }\n        if (typeof array[0] === 'string') {\n            return array.filter((item) => item.toLowerCase().indexOf(searchText.toLowerCase()) > -1);\n        }\n        // filter array, items which match and return true will be\n        // kept, false will be filtered out\n        if (!keyName) {\n            return array.filter((item) => {\n                for (const key in item) {\n                    if (typeof item[key] !== 'object' && item[key].toString().toLowerCase().indexOf(searchText.toLowerCase()) > -1) {\n                        return true;\n                    }\n                }\n                return false;\n            });\n        }\n        else {\n            return array.filter((item) => {\n                if (typeof item[keyName] !== 'object' && item[keyName].toString().toLowerCase().indexOf(searchText.toLowerCase()) > -1) {\n                    return true;\n                }\n                return false;\n            });\n        }\n    }\n}\n/** @nocollapse */ FilterByPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.5\", ngImport: i0, type: FilterByPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\n/** @nocollapse */ FilterByPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"14.0.0\", version: \"14.0.5\", ngImport: i0, type: FilterByPipe, name: \"filterBy\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.5\", ngImport: i0, type: FilterByPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'filterBy'\n                }]\n        }] });\n\nclass LimitToPipe {\n    transform(array, itemsCount, startIndex = 0) {\n        if (!Array.isArray(array) || itemsCount === 0) {\n            return array;\n        }\n        return array.slice(startIndex, startIndex + itemsCount);\n    }\n}\n/** @nocollapse */ LimitToPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.5\", ngImport: i0, type: LimitToPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\n/** @nocollapse */ LimitToPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"14.0.0\", version: \"14.0.5\", ngImport: i0, type: LimitToPipe, name: \"limitTo\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.5\", ngImport: i0, type: LimitToPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'limitTo'\n                }]\n        }] });\n\nclass NgxSelectDropdownComponent {\n    constructor(cdref, _elementRef, dropdownService) {\n        this.cdref = cdref;\n        this._elementRef = _elementRef;\n        this.dropdownService = dropdownService;\n        /**\n         * Get the required inputs\n         */\n        this.options = [];\n        /**\n         * configuration options\n         */\n        this.config = {};\n        /**\n         * Whether multiple selection or single selection allowed\n         */\n        this.multiple = false;\n        /**\n         * change event when value changes to provide user to handle things in change event\n         */\n        this.change = new EventEmitter();\n        /**\n         * The search text change event emitter emitted when user type in the search input\n         */\n        this.searchChange = new EventEmitter();\n        /**\n         * Event emitted when dropdown is open.\n         */\n        this.open = new EventEmitter();\n        /**\n         * Event emitted when dropdown is open.\n         */\n        this.close = new EventEmitter();\n        /**\n         * Toogle the dropdown list\n         */\n        this.toggleDropdown = false;\n        /**\n         * Available items for selection\n         */\n        this.availableItems = [];\n        /**\n         * Selected Items\n         */\n        this.selectedItems = [];\n        /**\n         * Selection text to be Displayed\n         */\n        this.selectedDisplayText = \"Select\";\n        /**\n         * variable to track if clicked inside or outside of component\n         */\n        this.clickedInside = false;\n        /**\n         * variable to track keypress event inside and outsid of component\n         */\n        this.insideKeyPress = false;\n        /**\n         * variable to track the focused item whenuser uses arrow keys to select item\n         */\n        this.focusedItemIndex = null;\n        /**\n         * element to show not found text when not itmes match the search\n         */\n        this.showNotFound = false;\n        this.onChange = () => {\n            // empty\n        };\n        this.onTouched = () => {\n            // empty\n        };\n        this.tabindex = 0;\n        this.multiple = false;\n    }\n    get value() {\n        return this._value;\n    }\n    set value(val) {\n        this._value = val;\n        this.onChange(val);\n        this.onTouched();\n    }\n    /**\n     * click listener for host inside this component i.e\n     * if many instances are there, this detects if clicked inside\n     * this instance\n     */\n    clickInsideComponent() {\n        this.clickedInside = true;\n    }\n    /**\n     * View reference for the dorpdown list\n     */\n    set dropDownElement(ref) {\n        if (ref) {\n            // initially setter gets called with undefined\n            this.dropdownList = ref;\n        }\n    }\n    /**\n     * Event listener for the blur event to hide the dropdown\n     */\n    blur() {\n        if (!this.insideKeyPress) {\n            this.toggleDropdown = false;\n        }\n    }\n    focus() {\n        /* istanbul ignore else */\n        if (!this.disabled) {\n            this.toggleSelectDropdown();\n        }\n    }\n    /**\n     * click handler on documnent to hide the open dropdown if clicked outside\n     */\n    clickOutsideComponent() {\n        /* istanbul ignore else */\n        if (!this.clickedInside) {\n            this.toggleDropdown = false;\n            this.resetArrowKeyActiveElement();\n            // clear searh on close\n            this.searchText = null;\n            this.close.emit();\n        }\n        this.clickedInside = false;\n    }\n    /**\n     * click handler on documnent to hide the open dropdown if clicked outside\n     */\n    KeyPressOutsideComponent() {\n        /* istanbul ignore else */\n        if (!this.insideKeyPress) {\n            this.toggleDropdown = false;\n            this.resetArrowKeyActiveElement();\n        }\n        this.insideKeyPress = false;\n    }\n    /**\n     * Event handler for key up and down event and enter press for selecting element\n     */\n    handleKeyboardEvent($event) {\n        this.insideKeyPress = true;\n        /* istanbul ignore else */\n        if ($event.keyCode === 27 || this.disabled) {\n            this.toggleDropdown = false;\n            this.insideKeyPress = false;\n            return;\n        }\n        const avaOpts = this.availableOptions.toArray();\n        /* istanbul ignore else */\n        if ($event.keyCode !== 9 && avaOpts.length === 0 && !this.toggleDropdown) {\n            this.toggleDropdown = true;\n        }\n        // Arrow Down\n        /* istanbul ignore else */\n        if ($event.keyCode === 40 && avaOpts.length > 0) {\n            this.onArrowKeyDown();\n            /* istanbul ignore else */\n            if (this.focusedItemIndex >= avaOpts.length) {\n                this.focusedItemIndex = 0;\n            }\n            avaOpts[this.focusedItemIndex].nativeElement.focus();\n            $event.preventDefault();\n        }\n        // Arrow Up\n        /* istanbul ignore else */\n        if ($event.keyCode === 38 && avaOpts.length) {\n            this.onArrowKeyUp();\n            /* istanbul ignore else */\n            if (this.focusedItemIndex >= avaOpts.length) {\n                this.focusedItemIndex = avaOpts.length - 1;\n            }\n            avaOpts[this.focusedItemIndex].nativeElement.focus();\n            $event.preventDefault();\n        }\n        // Enter\n        /* istanbul ignore else */\n        if ($event.keyCode === 13 && this.focusedItemIndex !== null) {\n            const filteredItems = new FilterByPipe().transform(this.availableItems, this.searchText, this.config.searchOnKey);\n            this.selectItem(filteredItems[this.focusedItemIndex], this.availableItems.indexOf(filteredItems[this.focusedItemIndex]));\n            return false;\n        }\n    }\n    /**\n     * Component onInit\n     */\n    ngOnInit() {\n        /* istanbul ignore else */\n        if (typeof this.options !== \"undefined\" &&\n            typeof this.config !== \"undefined\" &&\n            Array.isArray(this.options)) {\n            this.availableItems = [\n                ...this.options.sort(this.config.customComparator),\n            ];\n            this.initDropdownValuesAndOptions();\n        }\n        this.serviceSubscriptions();\n    }\n    isVisible() {\n        if (!this.dropdownList) {\n            return { visible: false, element: null };\n        }\n        const el = this.dropdownList.nativeElement;\n        if (!el) {\n            return { visible: false, element: el };\n        }\n        const rect = el.getBoundingClientRect();\n        const topShown = rect.top >= 0;\n        const bottomShown = rect.bottom <= window.innerHeight;\n        return { visible: topShown && bottomShown, element: el };\n    }\n    serviceSubscriptions() {\n        this.dropdownService.openDropdownInstance.subscribe((instanceId) => {\n            if (this.instanceId === instanceId) {\n                this.toggleDropdown = true;\n                this.openStateChange();\n                this.resetArrowKeyActiveElement();\n            }\n        });\n        this.dropdownService.closeDropdownInstance.subscribe((instanceId) => {\n            if (this.instanceId === instanceId) {\n                this.toggleDropdown = false;\n                this.openStateChange();\n                this.resetArrowKeyActiveElement();\n            }\n        });\n    }\n    /**\n     * after view init to subscribe to available option changes\n     */\n    ngAfterViewInit() {\n        this.availableOptions.changes.subscribe(this.setNotFoundState.bind(this));\n    }\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    writeValue(value, internal) {\n        if (value) {\n            if (Array.isArray(value)) {\n                if (this.multiple) {\n                    this.value = value;\n                }\n                else if (value.length > 0) {\n                    this.value = value[0];\n                }\n            }\n            else {\n                this.value = value;\n            }\n            /* istanbul ignore else */\n            if (this.selectedItems.length === 0) {\n                if (Array.isArray(value)) {\n                    this.selectedItems = value;\n                }\n                else {\n                    this.selectedItems.push(value);\n                }\n                this.initDropdownValuesAndOptions();\n            }\n        }\n        else {\n            this.value = [];\n            /* istanbul ignore else */\n            if (!internal) {\n                this.reset();\n            }\n        }\n        /* istanbul ignore else */\n        if (!internal) {\n            this.reset();\n        }\n    }\n    reset() {\n        if (!this.config) {\n            return;\n        }\n        this.selectedItems = [];\n        this.availableItems = [...this.options.sort(this.config.customComparator)];\n        this.initDropdownValuesAndOptions();\n    }\n    /**\n     * function sets whether to show items not found text or not\n     */\n    setNotFoundState() {\n        if (this.availableOptions.length === 0) {\n            this.showNotFound = true;\n        }\n        else {\n            this.showNotFound = false;\n        }\n        this.cdref.detectChanges();\n    }\n    /**\n     * Component onchage i.e when any of the input properties change\n     */\n    ngOnChanges(changes) {\n        if (!this.config) {\n            return;\n        }\n        this.selectedItems = [];\n        // this.searchText = null;\n        this.options = this.options || [];\n        /* istanbul ignore else */\n        if (changes.options) {\n            this.availableItems = [\n                ...this.options.sort(this.config.customComparator),\n            ];\n        }\n        /* istanbul ignore else */\n        if (changes.value) {\n            /* istanbul ignore else */\n            if (JSON.stringify(changes.value.currentValue) === JSON.stringify([]) ||\n                changes.value.currentValue === \"\" ||\n                changes.value.currentValue === null) {\n                this.availableItems = [\n                    ...this.options.sort(this.config.customComparator),\n                ];\n            }\n        }\n        this.initDropdownValuesAndOptions();\n    }\n    /**\n     * Deselct a selected items\n     * @param item:  item to be deselected\n     * @param index:  index of the item\n     */\n    deselectItem(item, index) {\n        this.selectedItems.forEach((element, i) => {\n            /* istanbul ignore else */\n            if (item === element) {\n                this.selectedItems.splice(i, 1);\n            }\n        });\n        let sortedItems = [...this.availableItems];\n        /* istanbul ignore else */\n        if (!this.availableItems.includes(item)) {\n            this.availableItems.push(item);\n            sortedItems = this.availableItems.sort(this.config.customComparator);\n        }\n        this.selectedItems = [...this.selectedItems];\n        this.availableItems = [...sortedItems];\n        /* istanbul ignore else */\n        if (!Array.isArray(this.value)) {\n            this.value = [];\n        }\n        this.valueChanged();\n        this.resetArrowKeyActiveElement();\n    }\n    /**\n     * Select an item\n     * @param item:  item to be selected\n     * @param index:  index of the item\n     */\n    selectItem(item, index) {\n        /* istanbul ignore else */\n        if (!this.multiple) {\n            /* istanbul ignore else */\n            if (this.selectedItems.length > 0) {\n                this.availableItems.push(this.selectedItems[0]);\n            }\n            this.selectedItems = [];\n            this.toggleDropdown = false;\n        }\n        this.availableItems.forEach((element, i) => {\n            /* istanbul ignore else */\n            if (item === element) {\n                this.selectedItems.push(item);\n                this.availableItems.splice(i, 1);\n            }\n        });\n        /* istanbul ignore else */\n        if (this.config.clearOnSelection) {\n            this.searchText = null;\n        }\n        this.selectedItems = [...this.selectedItems];\n        this.availableItems = [...this.availableItems];\n        this.selectedItems.sort(this.config.customComparator);\n        this.availableItems.sort(this.config.customComparator);\n        // this.searchText = null;\n        this.valueChanged();\n        this.resetArrowKeyActiveElement();\n    }\n    /**\n     * When selected items changes trigger the chaange back to parent\n     */\n    valueChanged() {\n        this.writeValue(this.selectedItems, true);\n        // this.valueChange.emit(this.value);\n        this.change.emit({ value: this.value });\n        this.setSelectedDisplayText();\n    }\n    /**\n     * Toggle the dropdownlist on/off\n     */\n    toggleSelectDropdown() {\n        this.toggleDropdown = !this.toggleDropdown;\n        this.top = \"30px\";\n        this.openStateChange();\n        this.resetArrowKeyActiveElement();\n        setTimeout(() => {\n            const { visible, element } = this.isVisible();\n            if (element) {\n                this.top = visible\n                    ? \"30px\"\n                    : `-${element.getBoundingClientRect().height}px`;\n            }\n        }, 5);\n    }\n    openStateChange() {\n        if (this.toggleDropdown) {\n            this.dropdownService.openInstances.push(this.instanceId);\n            this.open.emit();\n        }\n        else {\n            this.searchText = null;\n            this.close.emit();\n            this.dropdownService.openInstances.splice(this.dropdownService.openInstances.indexOf(this.instanceId), 1);\n        }\n    }\n    /**\n     * The change handler for search text\n     */\n    searchTextChanged() {\n        this.searchChange.emit(this.searchText);\n    }\n    changeSearchText($event) {\n        $event.stopPropagation();\n    }\n    /**\n     * initialize the config and other properties\n     */\n    initDropdownValuesAndOptions() {\n        const config = {\n            displayKey: \"description\",\n            height: \"auto\",\n            search: false,\n            placeholder: \"Select\",\n            searchPlaceholder: \"Search...\",\n            limitTo: 0,\n            customComparator: undefined,\n            noResultsFound: \"No results found!\",\n            moreText: \"more\",\n            searchOnKey: null,\n            clearOnSelection: false,\n            inputDirection: \"ltr\",\n        };\n        /* istanbul ignore else */\n        if (this.config === \"undefined\" || Object.keys(this.config).length === 0) {\n            this.config = { ...config };\n        }\n        for (const key of Object.keys(config)) {\n            this.config[key] = this.config[key] ? this.config[key] : config[key];\n        }\n        this.config = { ...this.config };\n        // Adding placeholder in config as default param\n        this.selectedDisplayText = this.config[\"placeholder\"];\n        /* istanbul ignore else */\n        if (this.value !== \"\" && typeof this.value !== \"undefined\") {\n            if (Array.isArray(this.value)) {\n                this.selectedItems = this.value;\n            }\n            else if (this.value !== \"\" && this.value !== null) {\n                this.selectedItems[0] = this.value;\n            }\n            else {\n                this.selectedItems = [];\n                this.value = [];\n            }\n            this.selectedItems.forEach((item) => {\n                const ind = this.availableItems.findIndex((aItem) => JSON.stringify(item) === JSON.stringify(aItem));\n                if (ind !== -1) {\n                    this.availableItems.splice(ind, 1);\n                }\n            });\n        }\n        this.setSelectedDisplayText();\n    }\n    /**\n     * set the text to be displayed\n     */\n    setSelectedDisplayText() {\n        let text = this.selectedItems[0];\n        /* istanbul ignore else */\n        if (typeof this.selectedItems[0] === \"object\") {\n            text = this.config.displayFn\n                ? this.config.displayFn(this.selectedItems[0])\n                : this.selectedItems[0][this.config.displayKey];\n        }\n        if (this.multiple && this.selectedItems.length > 0) {\n            this.selectedDisplayText =\n                this.selectedItems.length === 1\n                    ? text\n                    : text +\n                        ` + ${this.selectedItems.length - 1} ${this.config.moreText}`;\n        }\n        else {\n            this.selectedDisplayText =\n                this.selectedItems.length === 0 ? this.config.placeholder : text;\n        }\n    }\n    /**\n     * Event handler for arrow key up event thats focuses on a item\n     */\n    onArrowKeyUp() {\n        /* istanbul ignore else */\n        if (this.focusedItemIndex === 0) {\n            this.focusedItemIndex = this.availableItems.length - 1;\n            return;\n        }\n        /* istanbul ignore else */\n        if (this.onArrowKey()) {\n            this.focusedItemIndex--;\n        }\n    }\n    /**\n     * Event handler for arrow key down event thats focuses on a item\n     */\n    onArrowKeyDown() {\n        /* istanbul ignore else */\n        if (this.focusedItemIndex === this.availableItems.length - 1) {\n            this.focusedItemIndex = 0;\n            return;\n        }\n        /* istanbul ignore else */\n        if (this.onArrowKey()) {\n            this.focusedItemIndex++;\n        }\n    }\n    onArrowKey() {\n        /* istanbul ignore else */\n        if (this.focusedItemIndex === null) {\n            this.focusedItemIndex = 0;\n            return false;\n        }\n        return true;\n    }\n    /**\n     * will reset the element that is marked active using arrow keys\n     */\n    resetArrowKeyActiveElement() {\n        this.focusedItemIndex = null;\n    }\n}\n/** @nocollapse */ NgxSelectDropdownComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.5\", ngImport: i0, type: NgxSelectDropdownComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: SelectDropDownService }], target: i0.ɵɵFactoryTarget.Component });\n/** @nocollapse */ NgxSelectDropdownComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.5\", type: NgxSelectDropdownComponent, selector: \"ngx-select-dropdown\", inputs: { _value: \"_value\", options: \"options\", config: \"config\", multiple: \"multiple\", disabled: \"disabled\", instanceId: \"instanceId\" }, outputs: { change: \"change\", searchChange: \"searchChange\", open: \"open\", close: \"close\" }, host: { listeners: { \"click\": \"clickInsideComponent()\", \"blur\": \"blur()\", \"focus\": \"focus()\", \"document:click\": \"clickOutsideComponent()\", \"document:keydown\": \"KeyPressOutsideComponent()\", \"keydown\": \"handleKeyboardEvent($event)\" }, properties: { \"attr.tabindex\": \"this.tabindex\" } }, providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef((() => NgxSelectDropdownComponent)),\n            multi: true,\n        },\n    ], viewQueries: [{ propertyName: \"dropDownElement\", first: true, predicate: [\"dropdownList\"], descendants: true }, { propertyName: \"availableOptions\", predicate: [\"availableOption\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: \"<div class=\\\"ngx-dropdown-container\\\">\\n    <button type=\\\"button\\\" tabindex=\\\"-1\\\" class=\\\"ngx-dropdown-button\\\" [ngClass]=\\\"{ 'ngx-disabled': disabled }\\\"\\n        [disabled]=\\\"disabled\\\" (click)=\\\"toggleSelectDropdown()\\\">\\n        <span class=\\\"display-text\\\">{{ selectedDisplayText }} </span>\\n        <span class=\\\"nsdicon-angle-down\\\" [ngClass]=\\\"{'up': toggleDropdown }\\\"></span>\\n    </button>\\n    <div #dropdownList class=\\\"ngx-dropdown-list-container\\\" *ngIf=\\\"toggleDropdown\\\" [style.maxHeight]=\\\"config.height\\\"\\n        [style.top]=\\\"top\\\">\\n        <div class=\\\"search-container\\\" *ngIf=\\\"config.search\\\">\\n            <input (change)=\\\"changeSearchText($event)\\\" [style.direction]=\\\"config.inputDirection\\\" name=\\\"search-text\\\"\\n                (input)=\\\"searchTextChanged()\\\" [(ngModel)]=\\\"searchText\\\" tabindex=\\\"-1\\\" autocomplete=\\\"off\\\" />\\n            <label [ngClass]=\\\"{ active: searchText }\\\">\\n                <span class=\\\"nsdicon-search\\\"></span>\\n                {{ config.searchPlaceholder }}</label>\\n        </div>\\n        <!-- <div class=\\\"select-options\\\">\\n            <div class=\\\"select-all\\\">Select all</div>\\n            <div class=\\\"clear-all\\\">Clear all</div>\\n        </div> -->\\n        <ul class=\\\"selected-items\\\">\\n            <li class=\\\"selected-item\\\" tabindex=\\\"-1\\\" *ngFor=\\\"let selected of selectedItems; let i = index\\\"\\n                (click)=\\\"deselectItem(selected, i)\\\">\\n                <span class=\\\"nsdicon-close\\\">x</span>\\n                <span>\\n                    {{\\n                    config.displayFn\\n                    ? config.displayFn(selected)\\n                    : selected[config.displayKey] || selected\\n                    }}\\n                </span>\\n            </li>\\n        </ul>\\n        <hr *ngIf=\\\"selectedItems.length > 0 && availableItems.length > 0\\\" />\\n        <ul class=\\\"available-items\\\">\\n            <li class=\\\"available-item\\\" #availableOption *ngFor=\\\"\\n            let item of availableItems\\n              | filterBy: searchText:config.searchOnKey\\n              | limitTo: config.limitTo;\\n            let i = index\\n          \\\" tabindex=\\\"-1\\\" [ngClass]=\\\"{\\n            active: focusedItemIndex == i && !item.disabled,\\n            disabled: item.disabled\\n          }\\\" (click)=\\\"selectItem(item, i)\\\">\\n                {{\\n                config.displayFn\\n                ? config.displayFn(item)\\n                : item[config.displayKey] || item\\n                }}\\n            </li>\\n            <li *ngIf=\\\"showNotFound\\\">{{ config.noResultsFound }}</li>\\n        </ul>\\n    </div>\\n</div>\", styles: [\".ngx-dropdown-container{width:100%;position:relative}.ngx-dropdown-container button{display:inline-block;margin-bottom:0;font-weight:400;line-height:1.42857143;vertical-align:middle;touch-action:manipulation;cursor:pointer;-webkit-user-select:none;user-select:none;border:1px solid #ccc;border-radius:4px;color:#333;background-color:#fff;white-space:nowrap;overflow-x:hidden;text-overflow:ellipsis;text-align:left}.ngx-dropdown-container button span{display:inline;vertical-align:middle}.ngx-dropdown-container button .nsdicon-angle-down{right:5px;position:relative;float:right;transition:transform .2s ease}.ngx-dropdown-container button .nsdicon-angle-down:before{border-style:solid;border-width:.1em .1em 0 0;content:\\\"\\\";display:inline-block;height:10px;position:relative;vertical-align:text-top;width:10px;top:0;transform:rotate(135deg)}.ngx-dropdown-container button .nsdicon-angle-down.up{transform:rotate(180deg);transition:transform .2s ease}.ngx-dropdown-container .ngx-dropdown-button{width:100%;min-height:30px;padding:5px 10px;background-color:#fff}.ngx-dropdown-container .ngx-dropdown-button .display-text{display:inline-block;width:calc(100% - 20px)}.ngx-dropdown-container .ngx-dropdown-list-container{box-sizing:border-box;border:1px solid rgba(0,0,0,.15);border-radius:4px;padding-left:10px;padding-right:10px;z-index:999999999;width:100%;background-clip:padding-box;background:white;position:absolute;box-shadow:5px 5px 5px #00000036;overflow-y:auto}.ngx-dropdown-container .ngx-dropdown-list-container .search-container{position:relative;padding-top:10px;margin-top:5px}.ngx-dropdown-container .ngx-dropdown-list-container .search-container input{background-color:transparent;border:none;border-bottom:1px solid #9e9e9e;border-radius:0;outline:none;height:2rem;width:100%;font-size:13px;margin:0;padding:0;box-shadow:none;box-sizing:content-box;transition:all .3s}.ngx-dropdown-container .ngx-dropdown-list-container .search-container input:focus{border-bottom:1px solid #26a69a}.ngx-dropdown-container .ngx-dropdown-list-container .search-container input:focus+label{transform:translateY(-2px) scale(.8);transform-origin:0 0}.ngx-dropdown-container .ngx-dropdown-list-container .search-container label{color:#9e9e9e;position:absolute;top:0;left:0;height:100%;font-size:1rem;cursor:text;transition:transform .2s ease-out;transform-origin:0% 100%;text-align:initial;transform:translateY(12px);pointer-events:none}.ngx-dropdown-container .ngx-dropdown-list-container .search-container label.active{transform:translateY(-2px) scale(.8);transform-origin:0 0}.ngx-dropdown-container .ngx-dropdown-list-container ul{margin-top:1rem;margin-bottom:1rem;list-style-type:none;padding-left:0}.ngx-dropdown-container .ngx-dropdown-list-container ul.selected-items .selected-item{background-color:#337ab7;color:#fff;margin-bottom:2px}.ngx-dropdown-container .ngx-dropdown-list-container ul.selected-items .selected-item .nsdicon-close{font-weight:700;font-size:large}.ngx-dropdown-container .ngx-dropdown-list-container ul.available-items .available-item.active{background-color:#337ab7;color:#fff}.ngx-dropdown-container .ngx-dropdown-list-container ul li{font-size:inherit;cursor:pointer;display:block;padding:3px 20px;clear:both;font-weight:400;line-height:1.42857143;color:#333;white-space:normal}.ngx-dropdown-container .ngx-disabled{pointer-events:none;background-color:#e9ecef;opacity:1;cursor:no-drop}\\n\"], dependencies: [{ kind: \"directive\", type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i3.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i3.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i3.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { kind: \"pipe\", type: FilterByPipe, name: \"filterBy\" }, { kind: \"pipe\", type: LimitToPipe, name: \"limitTo\" }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.5\", ngImport: i0, type: NgxSelectDropdownComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"ngx-select-dropdown\", providers: [\n                        {\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: forwardRef((() => NgxSelectDropdownComponent)),\n                            multi: true,\n                        },\n                    ], template: \"<div class=\\\"ngx-dropdown-container\\\">\\n    <button type=\\\"button\\\" tabindex=\\\"-1\\\" class=\\\"ngx-dropdown-button\\\" [ngClass]=\\\"{ 'ngx-disabled': disabled }\\\"\\n        [disabled]=\\\"disabled\\\" (click)=\\\"toggleSelectDropdown()\\\">\\n        <span class=\\\"display-text\\\">{{ selectedDisplayText }} </span>\\n        <span class=\\\"nsdicon-angle-down\\\" [ngClass]=\\\"{'up': toggleDropdown }\\\"></span>\\n    </button>\\n    <div #dropdownList class=\\\"ngx-dropdown-list-container\\\" *ngIf=\\\"toggleDropdown\\\" [style.maxHeight]=\\\"config.height\\\"\\n        [style.top]=\\\"top\\\">\\n        <div class=\\\"search-container\\\" *ngIf=\\\"config.search\\\">\\n            <input (change)=\\\"changeSearchText($event)\\\" [style.direction]=\\\"config.inputDirection\\\" name=\\\"search-text\\\"\\n                (input)=\\\"searchTextChanged()\\\" [(ngModel)]=\\\"searchText\\\" tabindex=\\\"-1\\\" autocomplete=\\\"off\\\" />\\n            <label [ngClass]=\\\"{ active: searchText }\\\">\\n                <span class=\\\"nsdicon-search\\\"></span>\\n                {{ config.searchPlaceholder }}</label>\\n        </div>\\n        <!-- <div class=\\\"select-options\\\">\\n            <div class=\\\"select-all\\\">Select all</div>\\n            <div class=\\\"clear-all\\\">Clear all</div>\\n        </div> -->\\n        <ul class=\\\"selected-items\\\">\\n            <li class=\\\"selected-item\\\" tabindex=\\\"-1\\\" *ngFor=\\\"let selected of selectedItems; let i = index\\\"\\n                (click)=\\\"deselectItem(selected, i)\\\">\\n                <span class=\\\"nsdicon-close\\\">x</span>\\n                <span>\\n                    {{\\n                    config.displayFn\\n                    ? config.displayFn(selected)\\n                    : selected[config.displayKey] || selected\\n                    }}\\n                </span>\\n            </li>\\n        </ul>\\n        <hr *ngIf=\\\"selectedItems.length > 0 && availableItems.length > 0\\\" />\\n        <ul class=\\\"available-items\\\">\\n            <li class=\\\"available-item\\\" #availableOption *ngFor=\\\"\\n            let item of availableItems\\n              | filterBy: searchText:config.searchOnKey\\n              | limitTo: config.limitTo;\\n            let i = index\\n          \\\" tabindex=\\\"-1\\\" [ngClass]=\\\"{\\n            active: focusedItemIndex == i && !item.disabled,\\n            disabled: item.disabled\\n          }\\\" (click)=\\\"selectItem(item, i)\\\">\\n                {{\\n                config.displayFn\\n                ? config.displayFn(item)\\n                : item[config.displayKey] || item\\n                }}\\n            </li>\\n            <li *ngIf=\\\"showNotFound\\\">{{ config.noResultsFound }}</li>\\n        </ul>\\n    </div>\\n</div>\", styles: [\".ngx-dropdown-container{width:100%;position:relative}.ngx-dropdown-container button{display:inline-block;margin-bottom:0;font-weight:400;line-height:1.42857143;vertical-align:middle;touch-action:manipulation;cursor:pointer;-webkit-user-select:none;user-select:none;border:1px solid #ccc;border-radius:4px;color:#333;background-color:#fff;white-space:nowrap;overflow-x:hidden;text-overflow:ellipsis;text-align:left}.ngx-dropdown-container button span{display:inline;vertical-align:middle}.ngx-dropdown-container button .nsdicon-angle-down{right:5px;position:relative;float:right;transition:transform .2s ease}.ngx-dropdown-container button .nsdicon-angle-down:before{border-style:solid;border-width:.1em .1em 0 0;content:\\\"\\\";display:inline-block;height:10px;position:relative;vertical-align:text-top;width:10px;top:0;transform:rotate(135deg)}.ngx-dropdown-container button .nsdicon-angle-down.up{transform:rotate(180deg);transition:transform .2s ease}.ngx-dropdown-container .ngx-dropdown-button{width:100%;min-height:30px;padding:5px 10px;background-color:#fff}.ngx-dropdown-container .ngx-dropdown-button .display-text{display:inline-block;width:calc(100% - 20px)}.ngx-dropdown-container .ngx-dropdown-list-container{box-sizing:border-box;border:1px solid rgba(0,0,0,.15);border-radius:4px;padding-left:10px;padding-right:10px;z-index:999999999;width:100%;background-clip:padding-box;background:white;position:absolute;box-shadow:5px 5px 5px #00000036;overflow-y:auto}.ngx-dropdown-container .ngx-dropdown-list-container .search-container{position:relative;padding-top:10px;margin-top:5px}.ngx-dropdown-container .ngx-dropdown-list-container .search-container input{background-color:transparent;border:none;border-bottom:1px solid #9e9e9e;border-radius:0;outline:none;height:2rem;width:100%;font-size:13px;margin:0;padding:0;box-shadow:none;box-sizing:content-box;transition:all .3s}.ngx-dropdown-container .ngx-dropdown-list-container .search-container input:focus{border-bottom:1px solid #26a69a}.ngx-dropdown-container .ngx-dropdown-list-container .search-container input:focus+label{transform:translateY(-2px) scale(.8);transform-origin:0 0}.ngx-dropdown-container .ngx-dropdown-list-container .search-container label{color:#9e9e9e;position:absolute;top:0;left:0;height:100%;font-size:1rem;cursor:text;transition:transform .2s ease-out;transform-origin:0% 100%;text-align:initial;transform:translateY(12px);pointer-events:none}.ngx-dropdown-container .ngx-dropdown-list-container .search-container label.active{transform:translateY(-2px) scale(.8);transform-origin:0 0}.ngx-dropdown-container .ngx-dropdown-list-container ul{margin-top:1rem;margin-bottom:1rem;list-style-type:none;padding-left:0}.ngx-dropdown-container .ngx-dropdown-list-container ul.selected-items .selected-item{background-color:#337ab7;color:#fff;margin-bottom:2px}.ngx-dropdown-container .ngx-dropdown-list-container ul.selected-items .selected-item .nsdicon-close{font-weight:700;font-size:large}.ngx-dropdown-container .ngx-dropdown-list-container ul.available-items .available-item.active{background-color:#337ab7;color:#fff}.ngx-dropdown-container .ngx-dropdown-list-container ul li{font-size:inherit;cursor:pointer;display:block;padding:3px 20px;clear:both;font-weight:400;line-height:1.42857143;color:#333;white-space:normal}.ngx-dropdown-container .ngx-disabled{pointer-events:none;background-color:#e9ecef;opacity:1;cursor:no-drop}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: SelectDropDownService }]; }, propDecorators: { _value: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], config: [{\n                type: Input\n            }], multiple: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], instanceId: [{\n                type: Input\n            }], change: [{\n                type: Output\n            }], searchChange: [{\n                type: Output\n            }], open: [{\n                type: Output\n            }], close: [{\n                type: Output\n            }], availableOptions: [{\n                type: ViewChildren,\n                args: [\"availableOption\"]\n            }], clickInsideComponent: [{\n                type: HostListener,\n                args: [\"click\"]\n            }], dropDownElement: [{\n                type: ViewChild,\n                args: [\"dropdownList\"]\n            }], blur: [{\n                type: HostListener,\n                args: [\"blur\"]\n            }], focus: [{\n                type: HostListener,\n                args: [\"focus\"]\n            }], clickOutsideComponent: [{\n                type: HostListener,\n                args: [\"document:click\"]\n            }], KeyPressOutsideComponent: [{\n                type: HostListener,\n                args: [\"document:keydown\"]\n            }], tabindex: [{\n                type: HostBinding,\n                args: ['attr.tabindex']\n            }], handleKeyboardEvent: [{\n                type: HostListener,\n                args: [\"keydown\", [\"$event\"]]\n            }] } });\n\nclass SelectDropDownModule {\n}\n/** @nocollapse */ SelectDropDownModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.5\", ngImport: i0, type: SelectDropDownModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n/** @nocollapse */ SelectDropDownModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.0.5\", ngImport: i0, type: SelectDropDownModule, declarations: [NgxSelectDropdownComponent, FilterByPipe, LimitToPipe], imports: [CommonModule, FormsModule], exports: [NgxSelectDropdownComponent, FilterByPipe, LimitToPipe] });\n/** @nocollapse */ SelectDropDownModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.0.5\", ngImport: i0, type: SelectDropDownModule, imports: [CommonModule, FormsModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.5\", ngImport: i0, type: SelectDropDownModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [NgxSelectDropdownComponent, FilterByPipe, LimitToPipe],\n                    imports: [CommonModule, FormsModule],\n                    exports: [NgxSelectDropdownComponent, FilterByPipe, LimitToPipe],\n                    providers: [],\n                }]\n        }] });\n\n/*\n * Public API Surface of ngx-select-dropdown\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { FilterByPipe, LimitToPipe, NgxSelectDropdownComponent, SelectDropDownModule, SelectDropDownService };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}