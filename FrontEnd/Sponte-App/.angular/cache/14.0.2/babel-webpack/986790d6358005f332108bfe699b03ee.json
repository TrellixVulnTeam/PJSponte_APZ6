{"ast":null,"code":"import { FormControl } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"ngx-bootstrap/datepicker\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"ngx-bootstrap-spinner\";\nimport * as i5 from \"ngx-toastr\";\nimport * as i6 from \"ngx-bootstrap/modal\";\nimport * as i7 from \"@app/services/Live.service\";\nimport * as i8 from \"./../../../../services/instrutores.service\";\nimport * as i9 from \"@angular/common\";\nimport * as i10 from \"ngx-currency\";\nimport * as i11 from \"ngx-mask\";\nimport * as i12 from \"ngx-select-dropdown\";\nimport * as i13 from \"../../../../helpers/DateTimeForHora.pipe\";\n\nfunction LiveCadComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1, \" Nome do Live obrigat\\u00F3rio \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LiveCadComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1, \" Data hora in\\u00EDcio obrigat\\u00F3rio \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LiveCadComponent_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1, \" Dura\\u00E7\\u00E3o em minutos obrigat\\u00F3rio \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LiveCadComponent_div_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1, \" Valor da inscri\\u00E7\\u00E3o obrigat\\u00F3rio \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c0 = function () {\n  return {\n    prefix: \"R$ \",\n    align: \"left\",\n    thousands: \".\",\n    decimal: \",\"\n  };\n};\n\nexport class LiveCadComponent {\n  constructor(fb, localeService, routerActive, router, spinner, toastrService, modalService, liveService, instrutoresService) {\n    this.fb = fb;\n    this.localeService = localeService;\n    this.routerActive = routerActive;\n    this.router = router;\n    this.spinner = spinner;\n    this.toastrService = toastrService;\n    this.modalService = modalService;\n    this.liveService = liveService;\n    this.instrutoresService = instrutoresService;\n    this._Live = {};\n    this.statusSalvar = 'post';\n    this.Instrutores = [];\n    this.formControl1 = new FormControl();\n    this.localeService.use('pt-br');\n  }\n\n  get f() {\n    return this.form.controls;\n  }\n\n  get bsconfigDatepicker() {\n    return {\n      isAnimated: true,\n      adaptivePosition: true,\n      ShowWeekNumbers: true,\n      containerClass: 'theme-dark-blue' //dateInputFormat: 'DD/MM/YYYY hh:mm',\n\n    };\n  }\n\n  get MEditar() {\n    return this.statusSalvar == 'put';\n  }\n\n  ngOnInit() {\n    this.spinner.show();\n    this.validation();\n    this.carregarLive();\n    this.carregarInstrutor();\n  }\n\n  validation() {\n    this.form = this.fb.group({\n      nome: [''],\n      descricao: [''],\n      dataHoraInicio: [''],\n      duracaoMinutos: [''],\n      valorInscricao: [''],\n      instrutorId: ['']\n    });\n  }\n\n  validarCss(formCampos) {\n    return {\n      'is-invalid': formCampos.errors && formCampos.touched\n    };\n  }\n\n  resetForm() {\n    this.form.reset();\n    this.router.navigate([`Live/list`]);\n  }\n\n  carregarInstrutor() {\n    this.instrutoresService.getInstrutores().subscribe({\n      next: _Instrutores => {\n        console.log(_Instrutores);\n        this.Instrutores = _Instrutores; //this.InstrutoresListados = this.Instrutores;\n      },\n      error: error => {\n        this.toastrService.error('Erro ao localizar o Instrutor', 'Error!');\n      }\n    }).add(() => this.spinner.hide());\n  }\n\n  carregarLive() {\n    this.liveId = Number(this.routerActive.snapshot.paramMap.get('id'));\n    this.spinner.hide();\n\n    if (this.liveId == 0) {\n      this.statusSalvar = 'post';\n    } else {\n      this.statusSalvar = 'put';\n      this.liveService.getLiveById(Number(this.liveId)).subscribe({\n        next: live => {\n          this._Live = { ...live\n          };\n          this.form.patchValue(this._Live);\n        },\n        error: error => {\n          this.spinner.hide();\n          this.toastrService.error('Falha Interna ao lado do servidor ');\n        },\n        complete: () => {\n          this.spinner.hide();\n        }\n      });\n    }\n  }\n\n  salvarLive() {\n    if (this.form.valid) {\n      if (this.statusSalvar === 'post') {\n        this._Live = { ...this.form.value\n        };\n        this.liveService['post'](this._Live).subscribe({\n          next: LiveR => {\n            this.router.navigate([`Live/cad/${LiveR.id}`]);\n            this.toastrService.success('Live  salvo com sucesso', 'Sucesso');\n          },\n          error: error => {\n            this.spinner.show();\n            this.toastrService.error('Error ao salvar o Live', 'Erro');\n          },\n          complete: () => {\n            this.spinner.hide();\n          }\n        });\n      } else {\n        this._Live = {\n          id: this._Live.id,\n          ...this.form.value\n        };\n        this.liveService['put'](this._Live).subscribe({\n          next: () => {\n            this.toastrService.success('Live salvocom sucesso', 'Sucesso');\n          },\n          error: error => {\n            console.log(error);\n            this.spinner.hide();\n            this.toastrService.error('Error ao salvar o Instrutor', 'Erro');\n          },\n          complete: () => {\n            this.spinner.hide();\n          }\n        });\n      }\n    }\n  }\n\n}\n\nLiveCadComponent.ɵfac = function LiveCadComponent_Factory(t) {\n  return new (t || LiveCadComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.BsLocaleService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.NgxSpinnerService), i0.ɵɵdirectiveInject(i5.ToastrService), i0.ɵɵdirectiveInject(i6.BsModalService), i0.ɵɵdirectiveInject(i7.LiveService), i0.ɵɵdirectiveInject(i8.InstrutoresService));\n};\n\nLiveCadComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LiveCadComponent,\n  selectors: [[\"app-live-cad\"]],\n  decls: 47,\n  vars: 21,\n  consts: [[3, \"formGroup\"], [1, \"form-group\", \"p-3\", \"shadow\", \"p-12\", \"mb-12\", \"bg-white\", \"rounded\"], [1, \"row\"], [1, \"col-md-8\"], [\"type\", \"text\", \"formControlName\", \"nome\", \"placeholder\", \"Nome do Instrutor\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [1, \"form-group\", \"col-md-4\"], [\"formControlName\", \"Instrutores.id\", 1, \"form-control\", 3, \"items\"], [\"type\", \"datetime\", \"formControlName\", \"dataHoraInicio\", \"placeholder\", \"Data hora de inicio\", \"bsDatepicker\", \"\", 1, \"form-control\", 3, \"ngClass\", \"value\", \"bsConfig\"], [\"type\", \"text\", \"mask\", \"000\", \"formControlName\", \"duracaoMinutos\", \"placeholder\", \"Dura\\u00E7\\u00E3o em minutos\", 1, \"form-control\", 3, \"ngClass\"], [\"type\", \"text\", \"currencyMask\", \"\", \"formControlName\", \"valorInscricao\", 1, \"form-control\", 3, \"ngClass\", \"options\"], [1, \"form-group\", \"col-md-12\"], [\"type\", \"text\", \"formControlName\", \"descricao\", \"placeholder\", \"Descri\\u00E7\\u00E3o\", 1, \"form-control\", 3, \"ngClass\"], [1, \"card-footer\"], [1, \"col-md-10\"], [1, \"btn\", \"btn-outline-secondary\", \"border\", 3, \"click\"], [1, \"fa\", \"fa-cancel\"], [1, \"col-md-2\"], [1, \"btn\", \"btn-success\", \"bt_right\", 3, \"disabled\", \"click\"], [1, \"fa\", \"fa-save\"], [1, \"invalid-feedback\"]],\n  template: function LiveCadComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"label\");\n      i0.ɵɵtext(5, \"Nome Live:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"input\", 4);\n      i0.ɵɵtemplate(7, LiveCadComponent_div_7_Template, 2, 0, \"div\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 6)(9, \"label\");\n      i0.ɵɵtext(10, \"Instrutor:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"ngx-select-dropdown\", 7);\n      i0.ɵɵpipe(12, \"async\");\n      i0.ɵɵtext(13);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"div\", 2)(15, \"div\", 6)(16, \"label\");\n      i0.ɵɵtext(17, \"Data hora in\\u00EDcio:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"input\", 8);\n      i0.ɵɵpipe(19, \"DateTime\");\n      i0.ɵɵtemplate(20, LiveCadComponent_div_20_Template, 2, 0, \"div\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"div\", 6)(22, \"label\");\n      i0.ɵɵtext(23, \"Dura\\u00E7\\u00E3o em minutos:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(24, \"input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(25, LiveCadComponent_div_25_Template, 2, 0, \"div\", 5);\n      i0.ɵɵelementStart(26, \"div\", 6)(27, \"label\");\n      i0.ɵɵtext(28, \"Valor da Inscri\\u00E7\\u00E3o:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(29, \"input\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(30, LiveCadComponent_div_30_Template, 2, 0, \"div\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"div\", 2)(32, \"div\", 11)(33, \"label\");\n      i0.ɵɵtext(34, \"Descri\\u00E7\\u00E3o:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(35, \"input\", 12);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(36, \"br\");\n      i0.ɵɵelementStart(37, \"div\", 13)(38, \"div\", 2)(39, \"div\", 14)(40, \"button\", 15);\n      i0.ɵɵlistener(\"click\", function LiveCadComponent_Template_button_click_40_listener() {\n        return ctx.resetForm();\n      });\n      i0.ɵɵelement(41, \"i\", 16);\n      i0.ɵɵtext(42, \" \\u00A0 Cancelar \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(43, \"div\", 17)(44, \"button\", 18);\n      i0.ɵɵlistener(\"click\", function LiveCadComponent_Template_button_click_44_listener() {\n        return ctx.salvarLive();\n      });\n      i0.ɵɵelement(45, \"i\", 19);\n      i0.ɵɵtext(46, \" \\u00A0 Salvar \");\n      i0.ɵɵelementEnd()()()()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngClass\", ctx.validarCss(ctx.f.nome));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (ctx.f.nome.errors == null ? null : ctx.f.nome.errors.required) && ctx.f.nome.touched);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"items\", i0.ɵɵpipeBind1(12, 16, ctx.items));\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" Selected: \", ctx.formControl1.value, \" \");\n      i0.ɵɵadvance(5);\n      i0.ɵɵpropertyInterpolate(\"value\", i0.ɵɵpipeBind1(19, 18, ctx._Live.dataHoraInicio));\n      i0.ɵɵproperty(\"ngClass\", ctx.validarCss(ctx.f.dataHoraInicio))(\"bsConfig\", ctx.bsconfigDatepicker);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", (ctx.f.dataHoraInicio.errors == null ? null : ctx.f.dataHoraInicio.errors.required) && ctx.f.dataHoraInicio.touched);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", ctx.validarCss(ctx.f.duracaoMinutos));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (ctx.f.duracaoMinutos.errors == null ? null : ctx.f.duracaoMinutos.errors.required) && ctx.f.duracaoMinutos.touched);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", ctx.validarCss(ctx.f.valorInscricao))(\"options\", i0.ɵɵpureFunction0(20, _c0));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (ctx.f.valorInscricao.errors == null ? null : ctx.f.valorInscricao.errors.required) && ctx.f.valorInscricao.touched);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngClass\", ctx.validarCss(ctx.f.descricao));\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"disabled\", !ctx.form.valid);\n    }\n  },\n  dependencies: [i9.NgClass, i9.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i2.BsDatepickerDirective, i2.BsDatepickerInputDirective, i10.CurrencyMaskDirective, i11.MaskDirective, i12.NgxSelectDropdownComponent, i9.AsyncPipe, i13.DateTimeForHoraPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsaXZlLWNhZC5jb21wb25lbnQuY3NzIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","i0","LiveCadComponent","constructor","fb","localeService","routerActive","router","spinner","toastrService","modalService","liveService","instrutoresService","use","f","form","controls","bsconfigDatepicker","isAnimated","adaptivePosition","ShowWeekNumbers","containerClass","MEditar","statusSalvar","ngOnInit","show","validation","carregarLive","carregarInstrutor","group","nome","descricao","dataHoraInicio","duracaoMinutos","valorInscricao","instrutorId","validarCss","formCampos","errors","touched","resetForm","reset","navigate","getInstrutores","subscribe","next","_Instrutores","console","log","Instrutores","error","add","hide","liveId","Number","snapshot","paramMap","get","getLiveById","live","_Live","patchValue","complete","salvarLive","valid","value","LiveR","id","success","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Projetos\\01Pessoal\\Dev\\FrontEnd\\Sponte-App\\src\\app\\components\\cursos\\lives\\live-cad\\live-cad.component.ts","C:\\Projetos\\01Pessoal\\Dev\\FrontEnd\\Sponte-App\\src\\app\\components\\cursos\\lives\\live-cad\\live-cad.component.html"],"sourcesContent":["import { Instrutor } from './../../../../models/instrutor';\nimport { InstrutoresService } from './../../../../services/instrutores.service';\nimport { LiveService } from '@app/services/Live.service';\nimport { Component, OnInit, TemplateRef } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators, FormControl, FormArray, AbstractControl } from '@angular/forms';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { BsLocaleService } from 'ngx-bootstrap/datepicker';\nimport { NgxSpinnerService } from 'ngx-bootstrap-spinner';\nimport { ToastrService } from 'ngx-toastr';\nimport { Live } from '@app/models/live';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-live-cad',\n  templateUrl: './live-cad.component.html',\n  styleUrls: ['./live-cad.component.css']\n})\nexport class LiveCadComponent implements OnInit {\n\n  liveId: number | undefined ;\n  _Live = {} as Live;\n  form!: FormGroup;\n  modalRef?: BsModalRef;\n  statusSalvar = 'post' ;\n  public Instrutores: any = [];\n  public items: Observable<Instrutor[]> | any ;\n  public formControl1 = new FormControl();\n\n  get f(): any {\n    return this.form.controls;\n  }\n\n  public get bsconfigDatepicker(): any{\n    return {\n      isAnimated:true,\n      adaptivePosition:true,\n      ShowWeekNumbers: true,\n      containerClass: 'theme-dark-blue',\n      //dateInputFormat: 'DD/MM/YYYY hh:mm',\n  }\n}\n\nget MEditar(): boolean{\n  return this.statusSalvar == 'put';\n}\n\nconstructor(\n  private fb: FormBuilder,\n  private localeService: BsLocaleService,\n  private routerActive: ActivatedRoute,\n  private router: Router,\n  private spinner: NgxSpinnerService,\n  private toastrService: ToastrService,\n  private modalService: BsModalService,\n  private liveService : LiveService,\n  private instrutoresService : InstrutoresService,\n) {\nthis.localeService.use('pt-br');\n}\n\nngOnInit(): void {\n  this.spinner.show();\n  this.validation();\n  this.carregarLive();\n  this.carregarInstrutor();\n}\n\n\n\npublic validation(): void{\n  this.form = this.fb.group({\n    nome: [''],\n    descricao: [''],\n    dataHoraInicio: [''],\n    duracaoMinutos: [''],\n    valorInscricao: [''],\n    instrutorId:[''],\n  });\n}\n\npublic validarCss(formCampos: FormControl | AbstractControl):any{\n  return {'is-invalid': formCampos.errors && formCampos.touched }\n}\n\npublic resetForm(): void {\n  this.form.reset();\n  this.router.navigate([`Live/list`]);\n}\n\n\npublic carregarInstrutor(): void{\n\n  this.instrutoresService.getInstrutores().subscribe({\n    next:(_Instrutores: Instrutor[]): void =>{\n      console.log(_Instrutores);\n      this.Instrutores = _Instrutores;\n      //this.InstrutoresListados = this.Instrutores;\n      \n\n    },\n    error:(error: any) => {\n      this.toastrService.error('Erro ao localizar o Instrutor', 'Error!');\n    },\n   }).add(()=>this.spinner.hide())\n\n}\n\npublic carregarLive(): void{\n\n  this.liveId = Number(this.routerActive.snapshot.paramMap.get('id'));\n\n  this.spinner.hide();\n  if(this.liveId == 0 ){\n    this.statusSalvar = 'post';\n  }else{\n    this.statusSalvar = 'put';\n    this.liveService.getLiveById(Number(this.liveId)).subscribe({\n      next:(live: Live)=>{\n       this._Live = {... live}\n          this.form.patchValue(this._Live);\n      },\n      error:(error: any)=> {\n       this.spinner.hide()\n       this.toastrService.error('Falha Interna ao lado do servidor ');\n     },\n      complete:()=>{\n       this.spinner.hide();\n      }\n  });\n  }\n}\n\npublic salvarLive(): void{\n\n  if(this.form.valid){\n    if(this.statusSalvar === 'post'){\n\n      this._Live = {... this.form.value};\n      this.liveService['post'](this._Live).subscribe({\n          next:(LiveR: Live)=>{\n          this.router.navigate([`Live/cad/${LiveR.id}`]);\n          this.toastrService.success('Live  salvo com sucesso', 'Sucesso');\n        },\n        error:(error: any)=>{\n          this.spinner.show();\n          this.toastrService.error('Error ao salvar o Live','Erro');\n        },\n        complete:()=>{\n          this.spinner.hide();\n        },\n    });\n\n    }else{\n      this._Live = {id: this._Live.id, ... this.form.value}\n      this.liveService['put'](this._Live ).subscribe({\n        next:()=>{\n        this.toastrService.success('Live salvocom sucesso', 'Sucesso');\n      },\n\n      error:(error: any)=>{\n        console.log(error);\n        this.spinner.hide();\n        this.toastrService.error('Error ao salvar o Instrutor','Erro');\n      },\n      complete:()=>{\n        this.spinner.hide();\n      },\n    });\n    }\n  }\n}\n\n\n}\n","<form [formGroup]=\"form\">\n  <!--<p>Form value: {{form.value | json}}</p>\n  <p>Form Status: {{form.status | json}}</p>-->\n\n    <div class=\" form-group p-3 shadow p-12 mb-12 bg-white rounded\">\n      <div class=\"row\">\n        <div class=\"col-md-8\">\n          <label>Nome Live:</label>\n          <input type=\"text\"  [ngClass]=\"validarCss(f.nome)\"  class=\"form-control\"  formControlName=\"nome\" placeholder=\"Nome do Instrutor\">\n          <div *ngIf=\"f.nome.errors?.required &&  f.nome.touched\"  class=\"invalid-feedback\" >\n            Nome do Live obrigatório\n          </div>\n        </div>\n        <div class=\" form-group col-md-4\">\n          <label>Instrutor:</label>\n          <ngx-select-dropdown class=\"form-control\"  formControlName=\"Instrutores.id\" [items]=\"items | async\"></ngx-select-dropdown>\n          Selected: {{formControl1.value}}\n        </div>\n\n      </div>\n      <div class=\"row\">\n        <div class=\" form-group col-md-4\">\n          <label>Data hora início:</label>\n          <input type=\"datetime\"  [ngClass]=\"validarCss(f.dataHoraInicio)\" formControlName=\"dataHoraInicio\"  class=\"form-control\" placeholder=\"Data hora de inicio\"\n          value=\"{{_Live.dataHoraInicio | DateTime}}\"\n          bsDatepicker\n          [bsConfig]=\"bsconfigDatepicker\"\n          >\n          <div *ngIf=\"f.dataHoraInicio.errors?.required &&  f.dataHoraInicio.touched\" class=\"invalid-feedback\">\n            Data hora início obrigatório\n          </div>\n        </div>\n        <div class=\" form-group col-md-4\">\n          <label>Duração em minutos:</label>\n          <input type=\"text\"  [ngClass]=\"validarCss(f.duracaoMinutos)\"  mask=\"000\"  class=\"form-control\"  formControlName=\"duracaoMinutos\" placeholder=\"Duração em minutos\">\n        </div>\n        <div *ngIf=\"f.duracaoMinutos.errors?.required &&  f.duracaoMinutos.touched\"  class=\"invalid-feedback\" >\n          Duração em minutos  obrigatório\n        </div>\n        <div class=\" form-group col-md-4\">\n          <label>Valor da Inscrição:</label>\n          <input type=\"text\"  currencyMask  [ngClass]=\"validarCss(f.valorInscricao)\" [options]=\"{ prefix: 'R$ ',align: 'left' ,  thousands: '.', decimal: ',' }\"  class=\"form-control\"  formControlName=\"valorInscricao\">\n        </div>\n        <div *ngIf=\"f.valorInscricao.errors?.required &&  f.valorInscricao.touched\"  class=\"invalid-feedback\" >\n         Valor da inscrição obrigatório\n        </div>\n    </div>\n    <div class=\"row\">\n      <div class=\" form-group col-md-12\">\n        <label>Descrição:</label>\n        <input type=\"text\"  [ngClass]=\"validarCss(f.descricao)\"  class=\"form-control\"  formControlName=\"descricao\" placeholder=\"Descrição\">\n      </div>\n    </div>\n    <br/>\n    <div class=\"card-footer \">\n        <div class=\"row\">\n          <div class=\"col-md-10\">\n            <button class=\"btn btn-outline-secondary  border\" (click)=\"resetForm()\">\n              <i class=\"fa fa-cancel\"></i>\n              &nbsp;\n                Cancelar\n            </button>\n          </div>\n        <div class=\"col-md-2\">\n            <button class=\"btn btn-success bt_right\" [disabled]=\"!form.valid\" (click)=\"salvarLive()\">\n              <!--<span class=\"spinner-border spinner-border-sm mr-1\"></span>-->\n              <i class=\"fa fa-save\"></i>\n              &nbsp;\n              Salvar\n            </button>\n          </div>\n         </div>\n    </div>\n    </div>\n  </form>\n"]},"metadata":{},"sourceType":"module"}